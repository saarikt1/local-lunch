{"version":3,"sources":["components/showRestaurants/RestaurantDetails.jsx","components/showRestaurants/RestaurantMap.jsx","components/showRestaurants/RestaurantSuggestions.jsx","components/Header.jsx","components/addRestaurant/SearchResultDetails.jsx","components/addRestaurant/SearchResults.jsx","utils.js","components/addRestaurant/RestaurantForm.jsx","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","minWidth","margin","media","height","bullet","display","RestaurantDetails","restaurant","classes","bull","className","Card","CardContent","Typography","gutterBottom","variant","component","name","Skeleton","color","width","CardActions","Button","size","website","Link","href","style","marginLeft","marginBottom","RestaurantMap","userLocation","restaurantSuggestions","useState","boundingBox","setBoundingBox","useEffect","northBound","reduce","max","cur","Math","latlon","x","lat","westBound","min","y","lon","southBound","eastBound","calculateBoundingBox","Fragment","Box","id","flex","padding","Map","useFlyTo","bounds","boundsOptions","scrollWheelZoom","TileLayer","url","process","attribution","Circle","center","radius","Popup","map","r","Marker","key","position","Tooltip","permanent","RestaurantSuggestions","restaurants","isWithDistance","setRestaurantSuggestions","distance","array","number","suffledArray","temporaryValue","randomIndex","currentIndex","length","floor","random","shuffle","splice","limitToRandomSuggestions","filter","flexDirection","flexWrap","Array","from","index","Header","align","SearchResultDetails","searchResult","fillFormWithData","address","amenity","extratags","onClick","SearchResults","searchResults","justifyContent","place_id","deg2rad","deg","PI","calculateBoundingBoxAroundLocation","x1","y1","x2","y2","RestaurantForm","setSearchResults","fetchSearchResults","searchQuery","a","console","log","fetch","response","json","data","alert","formikSearchForm","useFormik","initialValues","search","onSubmit","values","JSON","stringify","formikAddRestaurant","subtitle","params","axios","post","res","handleSubmit","htmlFor","type","onChange","handleChange","value","setFieldValue","App","setRestaurants","setUserLocation","setIsWithDistance","setNotification","get","initRestaurants","navigator","geolocation","getCurrentPosition","coordinates","coords","latitude","longitude","message","restaurantsWithDistances","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","sqrt","toFixed","calculateDistanceBetweenPoints","addDistanceToRestaurants","CssBaseline","Container","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb4c3471.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Link,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n    minWidth: 300,\n    margin: \"8px 16px\",\n  },\n  media: {\n    height: 140,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 4px\",\n  },\n});\n\nconst RestaurantDetails = ({ restaurant }) => {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {restaurant ? restaurant.name : <Skeleton />}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {restaurant ? (\n            <>\n              Takeaway{bull}Big groups{bull}Fast service{bull}Buffet\n            </>\n          ) : (\n            <Skeleton width=\"60%\" />\n          )}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        {restaurant ? (\n          <Button size=\"small\" color=\"primary\">\n            {restaurant.website && (\n              <Link href={restaurant.website}>Website</Link>\n            )}\n          </Button>\n        ) : (\n          <Skeleton\n            variant=\"rect\"\n            width={56}\n            height={22}\n            style={{ marginLeft: \"8px\", marginBottom: \"8px\" }}\n          />\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default RestaurantDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { Map, TileLayer, Marker, Popup, Tooltip, Circle } from \"react-leaflet\";\nimport { Link, Typography, Box } from \"@material-ui/core\";\n\nconst RestaurantMap = ({ userLocation, restaurantSuggestions }) => {\n  const initialMapView = [\n    [62.9894714, 34.558059],\n    [38.1706012, -3.976497],\n  ];\n  const [boundingBox, setBoundingBox] = useState(initialMapView);\n\n  useEffect(() => {\n    const calculateBoundingBox = () => {\n      const northBound = restaurantSuggestions.reduce(\n        (max, cur) => Math.max(max, cur.latlon.x),\n        userLocation.lat\n      );\n\n      const westBound = restaurantSuggestions.reduce(\n        (min, cur) => Math.min(min, cur.latlon.y),\n        userLocation.lon\n      );\n\n      const southBound = restaurantSuggestions.reduce(\n        (min, cur) => Math.min(min, cur.latlon.x),\n        userLocation.lat\n      );\n\n      const eastBound = restaurantSuggestions.reduce(\n        (max, cur) => Math.max(max, cur.latlon.y),\n        userLocation.lon\n      );\n\n      setBoundingBox([\n        [northBound, eastBound],\n        [southBound, westBound],\n      ]);\n    };\n    if (userLocation && restaurantSuggestions) {\n      calculateBoundingBox();\n    }\n  }, [restaurantSuggestions, setBoundingBox, userLocation]);\n\n  return (\n    <React.Fragment>\n      <Box\n        id=\"map\"\n        flex=\"1\"\n        padding=\"8px\"\n        // style={{ border: \"3px dashed olive\" }}\n      >\n        <Map\n          useFlyTo=\"true\"\n          bounds={boundingBox}\n          boundsOptions={{ padding: [35, 35] }}\n          scrollWheelZoom={false}\n          style={{ width: \"100%\", height: \"500px\" }}\n        >\n          <TileLayer\n            url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}?access_token=${process.env.REACT_APP_MAPBOX}`}\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a>, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, &copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n          />\n          {userLocation && (\n            <Circle center={userLocation} radius={15}>\n              <Popup>\n                <Typography variant=\"subtitle1\">Your location</Typography>\n              </Popup>\n            </Circle>\n          )}\n          {restaurantSuggestions &&\n            restaurantSuggestions.map((r) => (\n              <Marker key={r.id} position={[r.latlon.x, r.latlon.y]}>\n                <Tooltip permanent>{r.name}</Tooltip>\n                <Popup>\n                  <Typography variant=\"h6\">{r.name}</Typography>\n                  <Link href={r.website}>{r.website}</Link>\n                </Popup>\n              </Marker>\n            ))}\n        </Map>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default RestaurantMap;\n","import React, { useEffect, useState } from \"react\";\nimport RestaurantDetails from \"./RestaurantDetails\";\nimport { Box } from \"@material-ui/core\";\nimport RestaurantMap from \"./RestaurantMap\";\n\nconst RestaurantSuggestions = ({\n  restaurants,\n  userLocation,\n  isWithDistance,\n}) => {\n  const [restaurantSuggestions, setRestaurantSuggestions] = useState();\n\n  useEffect(() => {\n    const filterByDistance = (distance) => {\n      const filteredRestaurants = restaurants.filter(\n        (r) => r.distance < distance / 1000\n      );\n      return filteredRestaurants;\n    };\n\n    const limitToRandomSuggestions = (array, number) => {\n      const suffledArray = shuffle(array);\n      setRestaurantSuggestions(suffledArray.splice(0, number));\n    };\n\n    function shuffle(array) {\n      var currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n\n    if (restaurants && userLocation && isWithDistance) {\n      const filteredRestaurants = filterByDistance(2000);\n      limitToRandomSuggestions(filteredRestaurants, 3);\n    }\n  }, [restaurants, userLocation, isWithDistance]);\n\n  return (\n    <>\n      <Box\n        id=\"restaurant-suggestions\"\n        display=\"flex\"\n        flex=\"1 0 auto\"\n        flexDirection=\"row\"\n        flexWrap=\"wrap\"\n        // style={{ border: \"2px solid blue\" }}\n      >\n        <Box display=\"flex\" flexDirection=\"column\">\n          {(restaurantSuggestions\n            ? restaurantSuggestions\n            : Array.from(new Array(3))\n          ).map((r, index) => (\n            <Box key={index}>\n              <RestaurantDetails restaurant={r} />\n            </Box>\n          ))}\n        </Box>\n        <RestaurantMap\n          userLocation={userLocation}\n          restaurantSuggestions={restaurantSuggestions}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default RestaurantSuggestions;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Header = () => {\n  return (\n    <div>\n      <Typography id=\"page-header\" variant=\"h4\" align=\"center\" gutterBottom>\n        Lunch Near Me\n      </Typography>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Card, CardContent, Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"8px 16px\",\n  },\n});\n\nconst SearchResultDetails = ({ searchResult, fillFormWithData }) => {\n  const classes = useStyles();\n\n  const name = searchResult.address.amenity;\n  const subtitle = \"\";\n  const website = searchResult.extratags.website;\n  const latlon = `${searchResult.lat},${searchResult.lon}`;\n  // const addressLine1 = [\n  //   searchResult.address.road,\n  //   \" \",\n  //   searchResult.address.house_number,\n  // ].join(\"\");\n\n  // const addressLine2 = [\n  //   searchResult.address.postcode,\n  //   \" \",\n  //   searchResult.address.city || searchResult.address.town,\n  //   \", \",\n  //   searchResult.address.country,\n  // ].join(\"\");\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\">{name}</Typography>\n        <Link href={website}>{website}</Link>\n        {/* <Typography variant=\"body1\">\n          {addressLine1}\n          <br />\n          {addressLine2}\n        </Typography> */}\n        <br />\n        <Button\n          color=\"primary\"\n          onClick={() => fillFormWithData(name, subtitle, website, latlon)}\n        >\n          Fill the data\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SearchResultDetails;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport SearchResultDetails from \"./SearchResultDetails\";\n\nconst SearchResults = ({ searchResults, fillFormWithData }) => {\n  return (\n    <Box\n      id=\"search-results\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n    >\n      {searchResults.map((r) => (\n        <SearchResultDetails\n          key={r.place_id}\n          searchResult={r}\n          fillFormWithData={fillFormWithData}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default SearchResults;\n","export const calculateDistanceBetweenPoints = (lat1, lon1, lat2, lon2) => {\n  var earthRadius = 6371;\n  var dLat = deg2rad(lat2 - lat1);\n  var dLon = deg2rad(lon2 - lon1);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var distance = (earthRadius * c).toFixed(2);\n  return distance;\n};\n\nconst deg2rad = (deg) => {\n  return deg * (Math.PI / 180);\n};\n\nexport const calculateBoundingBoxAroundLocation = (userLocation) => {\n  // Roughly 50 km difference to the original location for each variable\n  let x1 = userLocation.lon - 0.45;\n  let y1 = userLocation.lat - 0.45;\n  let x2 = userLocation.lon + 0.45;\n  let y2 = userLocation.lat + 0.45;\n\n  return { x1, y1, x2, y2 };\n};\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport SearchResults from \"./SearchResults\";\nimport { calculateBoundingBoxAroundLocation } from \"../../utils\";\nimport axios from \"axios\";\n\nconst RestaurantForm = ({ userLocation }) => {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const fetchSearchResults = async (searchQuery) => {\n    const { x1, y1, x2, y2 } = calculateBoundingBoxAroundLocation(userLocation);\n    console.log(\"Bounding box: \", x1, y1, x2, y2);\n\n    let response = await fetch(\n      `https://nominatim.openstreetmap.org/?addressdetails=1&q=${searchQuery}&format=json&limit=5&viewbox=${x1},${y1},${x2},${y2}&extratags=1&bounded=1`\n    );\n    let data = await response.json();\n    if (data.length) {\n      console.log(data);\n      setSearchResults(data);\n    } else {\n      alert(\"No search results found\");\n    }\n  };\n\n  const fillFormWithData = (name, subtitle, website, latlon) => {\n    formikAddRestaurant.setFieldValue(\"name\", name);\n    formikAddRestaurant.setFieldValue(\"subtitle\", subtitle);\n    formikAddRestaurant.setFieldValue(\"website\", website);\n    formikAddRestaurant.setFieldValue(\"latlon\", latlon);\n  };\n\n  const formikSearchForm = useFormik({\n    initialValues: {\n      search: \"\",\n    },\n    onSubmit: (values) => {\n      fetchSearchResults(JSON.stringify(values.search));\n    },\n  });\n\n  const formikAddRestaurant = useFormik({\n    initialValues: {\n      name: \"\",\n      subtitle: \"\",\n      website: \"\",\n      latlon: \"\",\n    },\n    onSubmit: async (values) => {\n      const params = {\n        name: values.name,\n        subtitle: values.subtitle,\n        website: values.website,\n        latlon: `(${values.latlon})`,\n      };\n      const res = await axios.post(\"/restaurants\", params);\n      console.log(\"res.data: \", res.data);\n    },\n  });\n\n  return (\n    <Box>\n      <Typography variant=\"h5\">Add a new restaurant</Typography>\n      <form onSubmit={formikSearchForm.handleSubmit}>\n        <label htmlFor=\"search\">Search for a restaurant to add</label>\n        <input\n          id=\"search\"\n          name=\"search\"\n          type=\"text\"\n          onChange={formikSearchForm.handleChange}\n          value={formikSearchForm.values.search}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <SearchResults\n        searchResults={searchResults}\n        fillFormWithData={fillFormWithData}\n      />\n\n      <Typography variant=\"h6\">Add manually</Typography>\n      <form onSubmit={formikAddRestaurant.handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.name}\n        />\n        <br />\n        <label htmlFor=\"subtitle\">Specifier</label>\n        <input\n          id=\"subtitle\"\n          name=\"subtitle\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.subtitle}\n        />\n        <br />\n        <label htmlFor=\"website\">Website</label>\n        <input\n          id=\"website\"\n          name=\"website\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.website}\n        />\n        <br />\n        <label htmlFor=\"latlon\">Coordinates lat, lon</label>\n        <input\n          id=\"latlon\"\n          name=\"latlon\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.latlon}\n        />\n        <br />\n        <button type=\"submit\">Add to database</button>\n      </form>\n    </Box>\n  );\n};\n\nexport default RestaurantForm;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport RestaurantSuggestions from \"./components/showRestaurants/RestaurantSuggestions\";\nimport Header from \"./components/Header\";\nimport { Container, Box } from \"@material-ui/core\";\nimport RestaurantForm from \"./components/addRestaurant/RestaurantForm\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Notification from \"./components/Notification\";\nimport { calculateDistanceBetweenPoints } from \"./utils\";\n\nconst App = () => {\n  const [restaurants, setRestaurants] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [isWithDistance, setIsWithDistance] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    const initRestaurants = async () => {\n      const response = await axios.get(\"/restaurants\");\n      setRestaurants(response.data);\n      console.log(\"Restaurants initialized\");\n    };\n\n    initRestaurants();\n  }, []);\n\n  useEffect(() => {\n    const locateUser = () => {\n      function success(position) {\n        const coordinates = {\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        };\n\n        setNotification({ message: null, type: null });\n        console.log(\"User location: \", coordinates);\n        setUserLocation(coordinates);\n        setIsWithDistance(false);\n      }\n\n      function error() {\n        setNotification({\n          message: \"Location is needed to show the restaurant suggestions.\",\n          type: \"error\",\n        });\n      }\n\n      if (!navigator.geolocation) {\n        setNotification({\n          message: \"Geolocation is not supported by your browser\",\n          type: \"error\",\n        });\n      } else {\n        navigator.geolocation.getCurrentPosition(success, error);\n        setNotification({ message: \"Locating...\", type: \"spinner\" });\n      }\n    };\n\n    locateUser();\n  }, []);\n\n  useEffect(() => {\n    const addDistanceToRestaurants = () => {\n      const restaurantsWithDistances = restaurants.map((r) => {\n        r.distance = calculateDistanceBetweenPoints(\n          userLocation.lat,\n          userLocation.lon,\n          r.latlon.x,\n          r.latlon.y\n        );\n        return r;\n      });\n      setRestaurants(restaurantsWithDistances);\n      setIsWithDistance(true);\n      console.log(\"Distances added to restaurants\");\n    };\n\n    if (userLocation && restaurants && !isWithDistance) {\n      addDistanceToRestaurants();\n    }\n  }, [userLocation, restaurants, isWithDistance]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\" style={{ padding: \"24px\" }}>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          // alignItems=\"center\"\n          // style={{ border: \"1px solid cyan\" }}\n        >\n          <Router>\n            <Header />\n            {/* <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              style={{\n                // border: \"1px solid olive\",\n                padding: \"10px\",\n                margin: \"10px\",\n              }}\n            >\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n                <Button\n                  id=\"locate-button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disableElevation\n                  type=\"button\"\n                  onClick={() => locateUser(setUserLocation, setNotification)}\n                  style={{ marginBottom: \"10px\" }}\n                >\n                  Show me my options\n                </Button>\n              </Link>\n              <Link to=\"/addRestaurant\" style={{ textDecoration: \"none\" }}>\n                <Button\n                  id=\"add-restaurant-button\"\n                  color=\"secondary\"\n                  onClick={() => locateUser(setUserLocation, setNotification)}\n                >\n                  Add a new restaurant\n                </Button>\n              </Link>\n            </Box> */}\n            <Switch>\n              <Route path=\"/addRestaurant\">\n                <RestaurantForm userLocation={userLocation} />\n              </Route>\n              <Route path=\"/\">\n                {/* <Notification notification={notification} /> */}\n                <RestaurantSuggestions\n                  restaurants={restaurants}\n                  setRestaurants={setRestaurants}\n                  userLocation={userLocation}\n                  isWithDistance={isWithDistance}\n                />\n              </Route>\n            </Switch>\n          </Router>\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"fontsource-roboto/latin-300-normal.css\";\nimport \"fontsource-roboto/latin-400-normal.css\";\nimport \"fontsource-roboto/latin-500-normal.css\";\nimport \"fontsource-roboto/latin-700-normal.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}