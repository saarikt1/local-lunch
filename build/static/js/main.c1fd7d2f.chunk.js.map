{"version":3,"sources":["components/showRestaurants/RestaurantDetails.jsx","components/showRestaurants/RestaurantMap.jsx","components/showRestaurants/RestaurantSuggestions.jsx","components/Header.jsx","components/addRestaurant/SearchResultDetails.jsx","components/addRestaurant/SearchResults.jsx","utils.js","components/addRestaurant/RestaurantForm.jsx","components/Notification.jsx","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","minWidth","margin","bullet","display","skeleton","marginLeft","marginBottom","RestaurantDetails","restaurant","classes","Card","className","CardContent","Typography","gutterBottom","variant","component","name","Skeleton","CardActions","Button","size","color","website","Link","href","width","height","map","paddingBottom","RestaurantMap","userLocation","restaurantSuggestions","useState","boundingBox","setBoundingBox","useRef","useEffect","current","leafletElement","invalidateSize","northBound","reduce","max","cur","Math","latlon","x","lat","westBound","min","y","lon","southBound","eastBound","calculateBoundingBox","Fragment","Box","id","flex","Map","ref","useFlyTo","bounds","boundsOptions","padding","scrollWheelZoom","TileLayer","url","process","attribution","Circle","center","radius","Popup","r","Marker","key","position","Tooltip","permanent","RestaurantSuggestions","restaurants","isWithDistance","setNotification","setRestaurantSuggestions","restaurantsFound","setRestaurantsFound","isTooFewResults","filteredRestaurants","filterByDistance","distance","filter","length","array","number","suffledArray","temporaryValue","randomIndex","currentIndex","floor","random","shuffle","splice","limitToRandomSuggestions","message","type","justifyContent","flexDirection","flexWrap","Array","from","index","Header","align","SearchResultDetails","searchResult","fillFormWithData","address","amenity","extratags","onClick","SearchResults","searchResults","place_id","deg2rad","deg","PI","calculateBoundingBoxAroundLocation","x1","y1","x2","y2","textField","RestaurantForm","setSearchResults","subtitle","initialFormValues","setInitialFormValues","fetchSearchResults","searchQuery","a","fetch","response","json","data","console","log","alert","initialValues","search","onSubmit","values","resetForm","JSON","stringify","htmlFor","TextField","label","enableReinitialize","validationSchema","Yup","required","params","axios","post","props","disableElevation","disabled","isValid","dirty","Alert","elevation","theme","marginTop","spacing","Notification","notification","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","App","setRestaurants","setUserLocation","setIsWithDistance","get","initRestaurants","navigator","geolocation","getCurrentPosition","coordinates","coords","latitude","longitude","restaurantsWithDistances","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","sqrt","toFixed","calculateDistanceBetweenPoints","addDistanceToRestaurants","CssBaseline","Container","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1fd7d2f.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Link,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 296,\n    minWidth: 250,\n    margin: \"8px 8px\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 4px\",\n  },\n  skeleton: {\n    marginLeft: \"8px\",\n    marginBottom: \"8px\",\n  },\n});\n\nconst RestaurantDetails = ({ restaurant }) => {\n  const classes = useStyles();\n  // const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {restaurant ? restaurant.name : <Skeleton />}\n        </Typography>\n        {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {restaurant ? (\n            <>\n              Takeaway{bull}Big groups{bull}Fast service{bull}Buffet\n            </>\n          ) : (\n            <Skeleton width=\"60%\" />\n          )}\n        </Typography> */}\n      </CardContent>\n      <CardActions>\n        {restaurant ? (\n          <Button size=\"small\" color=\"primary\">\n            {restaurant.website && (\n              <Link href={restaurant.website}>Website</Link>\n            )}\n          </Button>\n        ) : (\n          <Skeleton\n            variant=\"rect\"\n            width={56}\n            height={22}\n            className={classes.skeleton}\n          />\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default RestaurantDetails;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Map, TileLayer, Marker, Popup, Tooltip, Circle } from \"react-leaflet\";\nimport { Link, Typography, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  map: {\n    width: \"100%\",\n    minWidth: \"250px\",\n    paddingBottom: \"min(75%, 80vh)\",\n  },\n});\n\nconst RestaurantMap = ({ userLocation, restaurantSuggestions }) => {\n  const initialMapView = [\n    [62.9894714, 34.558059],\n    [38.1706012, -3.976497],\n  ];\n  const [boundingBox, setBoundingBox] = useState(initialMapView);\n  const map = useRef();\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    map.current.leafletElement.invalidateSize();\n  });\n\n  useEffect(() => {\n    const calculateBoundingBox = () => {\n      if (!restaurantSuggestions) {\n        setBoundingBox([\n          [userLocation.lat, userLocation.lon],\n          [userLocation.lat, userLocation.lon],\n        ]);\n      } else {\n        const northBound = restaurantSuggestions.reduce(\n          (max, cur) => Math.max(max, cur.latlon.x),\n          userLocation.lat\n        );\n\n        const westBound = restaurantSuggestions.reduce(\n          (min, cur) => Math.min(min, cur.latlon.y),\n          userLocation.lon\n        );\n\n        const southBound = restaurantSuggestions.reduce(\n          (min, cur) => Math.min(min, cur.latlon.x),\n          userLocation.lat\n        );\n\n        const eastBound = restaurantSuggestions.reduce(\n          (max, cur) => Math.max(max, cur.latlon.y),\n          userLocation.lon\n        );\n\n        setBoundingBox([\n          [northBound, eastBound],\n          [southBound, westBound],\n        ]);\n      }\n    };\n    if (userLocation) {\n      calculateBoundingBox();\n    }\n  }, [restaurantSuggestions, setBoundingBox, userLocation]);\n\n  return (\n    <React.Fragment>\n      <Box id=\"map\" flex=\"1\" margin=\"8px\">\n        <Map\n          ref={map}\n          useFlyTo=\"true\"\n          bounds={boundingBox}\n          boundsOptions={{ padding: [35, 35] }}\n          scrollWheelZoom={false}\n          className={classes.map}\n        >\n          <TileLayer\n            url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}?access_token=${process.env.REACT_APP_MAPBOX}`}\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a>, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, &copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n          />\n          {userLocation && (\n            <Circle center={userLocation} radius={15}>\n              <Popup>\n                <Typography variant=\"subtitle1\">Your location</Typography>\n              </Popup>\n            </Circle>\n          )}\n          {restaurantSuggestions &&\n            restaurantSuggestions.map((r) => (\n              <Marker key={r.id} position={[r.latlon.x, r.latlon.y]}>\n                <Tooltip permanent>{r.name}</Tooltip>\n                <Popup>\n                  <Typography variant=\"h6\">{r.name}</Typography>\n                  <Link href={r.website}>{r.website}</Link>\n                </Popup>\n              </Marker>\n            ))}\n        </Map>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default RestaurantMap;\n","import React, { useEffect, useState } from \"react\";\nimport RestaurantDetails from \"./RestaurantDetails\";\nimport { Box } from \"@material-ui/core\";\nimport RestaurantMap from \"./RestaurantMap\";\n\nconst RestaurantSuggestions = ({\n  restaurants,\n  userLocation,\n  isWithDistance,\n  setNotification,\n}) => {\n  const [restaurantSuggestions, setRestaurantSuggestions] = useState();\n  const [restaurantsFound, setRestaurantsFound] = useState(true);\n  const searchRadiusInMeters = 700;\n  const secondarySearchRadiusInMeters = 2000;\n\n  useEffect(() => {\n    let isTooFewResults = false;\n\n    const filterByDistance = (distance) => {\n      let filteredRestaurants = restaurants.filter(\n        (r) => r.distance < distance / 1000\n      );\n\n      if (!isTooFewResults && filteredRestaurants.length < 2) {\n        isTooFewResults = true;\n        return filterByDistance(secondarySearchRadiusInMeters);\n      }\n\n      if (filteredRestaurants.length === 0) {\n        return null;\n      }\n      return filteredRestaurants;\n    };\n\n    const limitToRandomSuggestions = (array, number) => {\n      const suffledArray = shuffle(array);\n      setRestaurantSuggestions(suffledArray.splice(0, number));\n    };\n\n    function shuffle(array) {\n      var currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n\n    if (restaurants && userLocation && isWithDistance) {\n      const filteredRestaurants = filterByDistance(searchRadiusInMeters);\n      if (filteredRestaurants) {\n        limitToRandomSuggestions(filteredRestaurants, 3);\n      } else {\n        setNotification({\n          message:\n            \"No restaurants found near your location. Try refreshing the page at a different location.\",\n          type: \"error\",\n        });\n        setRestaurantsFound(false);\n      }\n    }\n  }, [restaurants, userLocation, isWithDistance, setNotification]);\n\n  return (\n    <>\n      <Box\n        id=\"restaurant-suggestions\"\n        display=\"flex\"\n        flex=\"1 0 auto\"\n        justifyContent=\"center\"\n        flexDirection=\"row\"\n        flexWrap=\"wrap\"\n      >\n        {restaurantsFound && (\n          <Box display=\"flex\" flexDirection=\"column\">\n            {(restaurantSuggestions\n              ? restaurantSuggestions\n              : Array.from(new Array(3))\n            ).map((r, index) => (\n              <Box key={index}>\n                <RestaurantDetails restaurant={r} />\n              </Box>\n            ))}\n          </Box>\n        )}\n        <RestaurantMap\n          userLocation={userLocation}\n          restaurantSuggestions={restaurantSuggestions}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default RestaurantSuggestions;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Header = () => {\n  return (\n    <div>\n      <Typography id=\"page-header\" variant=\"h4\" align=\"center\" gutterBottom>\n        Lunch Near Me\n      </Typography>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Card, CardContent, Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"8px 16px\",\n  },\n});\n\nconst SearchResultDetails = ({ searchResult, fillFormWithData }) => {\n  const classes = useStyles();\n\n  const name = searchResult.address.amenity;\n  const subtitle = \"\";\n  const website = searchResult.extratags.website;\n  const latlon = `${searchResult.lat},${searchResult.lon}`;\n  // const addressLine1 = [\n  //   searchResult.address.road,\n  //   \" \",\n  //   searchResult.address.house_number,\n  // ].join(\"\");\n\n  // const addressLine2 = [\n  //   searchResult.address.postcode,\n  //   \" \",\n  //   searchResult.address.city || searchResult.address.town,\n  //   \", \",\n  //   searchResult.address.country,\n  // ].join(\"\");\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\">{name}</Typography>\n        <Link href={website}>{website}</Link>\n        {/* <Typography variant=\"body1\">\n          {addressLine1}\n          <br />\n          {addressLine2}\n        </Typography> */}\n        <br />\n        <Button\n          color=\"primary\"\n          onClick={() => fillFormWithData(name, subtitle, website, latlon)}\n        >\n          Fill the data\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SearchResultDetails;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport SearchResultDetails from \"./SearchResultDetails\";\n\nconst SearchResults = ({ searchResults, fillFormWithData }) => {\n  return (\n    <Box\n      id=\"search-results\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n    >\n      {searchResults.map((r) => (\n        <SearchResultDetails\n          key={r.place_id}\n          searchResult={r}\n          fillFormWithData={fillFormWithData}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default SearchResults;\n","export const calculateDistanceBetweenPoints = (lat1, lon1, lat2, lon2) => {\n  var earthRadius = 6371;\n  var dLat = deg2rad(lat2 - lat1);\n  var dLon = deg2rad(lon2 - lon1);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var distance = (earthRadius * c).toFixed(2);\n  return distance;\n};\n\nconst deg2rad = (deg) => {\n  return deg * (Math.PI / 180);\n};\n\nexport const calculateBoundingBoxAroundLocation = (userLocation) => {\n  // Roughly 50 km difference to the original location for each variable\n  let x1 = userLocation.lon - 0.45;\n  let y1 = userLocation.lat - 0.45;\n  let x2 = userLocation.lon + 0.45;\n  let y2 = userLocation.lat + 0.45;\n\n  return { x1, y1, x2, y2 };\n};\n","import React, { useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport SearchResults from \"./SearchResults\";\nimport { calculateBoundingBoxAroundLocation } from \"../../utils\";\nimport { TextField } from \"formik-material-ui\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  textField: {\n    minWidth: \"250px\",\n  },\n});\n\nconst RestaurantForm = ({ userLocation }) => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [initialFormValues, setInitialFormValues] = useState({\n    name: \"\",\n    subtitle: \"\",\n    website: \"\",\n    latlon: \"\",\n  });\n  const classes = useStyles();\n\n  const fetchSearchResults = async (searchQuery) => {\n    const { x1, y1, x2, y2 } = calculateBoundingBoxAroundLocation(userLocation);\n\n    const response = await fetch(\n      `https://nominatim.openstreetmap.org/?addressdetails=1&q=${searchQuery}&format=json&limit=5&viewbox=${x1},${y1},${x2},${y2}&extratags=1&bounded=1`\n    );\n    let data = await response.json();\n    if (data.length) {\n      console.log(data);\n      setSearchResults(data);\n    } else {\n      alert(\"No search results found\");\n    }\n  };\n\n  const fillFormWithData = (name, subtitle, website, latlon) => {\n    setInitialFormValues({\n      name: name,\n      subtitle: subtitle,\n      website: website,\n      latlon: latlon,\n    });\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\">Add a new restaurant</Typography>\n      <Formik\n        initialValues={{\n          search: \"\",\n        }}\n        onSubmit={(values, { resetForm }) => {\n          fetchSearchResults(JSON.stringify(values.search));\n          resetForm({ values: \"\" });\n        }}\n      >\n        <Form>\n          <label htmlFor=\"search\">\n            Search for a restaurant from Open Street Map data\n          </label>\n          <br />\n          <Field\n            component={TextField}\n            className={classes.textField}\n            label=\"Restaurant name\"\n            name=\"search\"\n            type=\"text\"\n          />\n          <br />\n          <Button color=\"primary\" type=\"submit\">\n            Search\n          </Button>\n        </Form>\n      </Formik>\n      <SearchResults\n        searchResults={searchResults}\n        fillFormWithData={fillFormWithData}\n      />\n\n      <Typography variant=\"h6\">Add manually</Typography>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialFormValues}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .max(40, \"Must be 40 characters or less\")\n            .required(\"Required\"),\n          website: Yup.string().url(\"Must be a valid url\"),\n          latlon: Yup.string().required(\"Required\"),\n        })}\n        onSubmit={async (values, { resetForm }) => {\n          const params = {\n            name: values.name,\n            subtitle: values.subtitle,\n            website: values.website,\n            latlon: `(${values.latlon})`,\n          };\n          await axios.post(\"/restaurants\", params);\n          resetForm({ values: \"\" });\n        }}\n      >\n        {(props) => (\n          <Form>\n            <Field\n              component={TextField}\n              className={classes.textField}\n              label=\"Name\"\n              name=\"name\"\n              type=\"text\"\n            />\n            <br />\n\n            <Field\n              component={TextField}\n              className={classes.textField}\n              label=\"Specifier\"\n              name=\"subtitle\"\n              type=\"text\"\n            />\n            <br />\n\n            <Field\n              component={TextField}\n              className={classes.textField}\n              label=\"Website\"\n              name=\"website\"\n              type=\"text\"\n            />\n            <br />\n\n            <Field\n              component={TextField}\n              className={classes.textField}\n              label=\"Coordinates lat, lon\"\n              name=\"latlon\"\n              type=\"text\"\n            />\n            <br />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disableElevation\n              disabled={!(props.isValid && props.dirty)}\n            >\n              Add restaurant\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default RestaurantForm;\n","import React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Notification = ({ notification }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  if (notification === null) {\n    return null;\n  } else {\n    return (\n      <div className={classes.root}>\n        <Snackbar\n          open={open}\n          autoHideDuration={6000}\n          onClose={handleClose}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        >\n          <Alert onClose={handleClose} severity=\"warning\">\n            {notification.message}\n          </Alert>\n        </Snackbar>\n      </div>\n    );\n  }\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RestaurantSuggestions from \"./components/showRestaurants/RestaurantSuggestions\";\nimport Header from \"./components/Header\";\nimport { Container, Box } from \"@material-ui/core\";\nimport RestaurantForm from \"./components/addRestaurant/RestaurantForm\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Notification from \"./components/Notification\";\nimport { calculateDistanceBetweenPoints } from \"./utils\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"24px\",\n  },\n});\n\nconst App = () => {\n  const [restaurants, setRestaurants] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [isWithDistance, setIsWithDistance] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const initRestaurants = async () => {\n      const response = await axios.get(\"/restaurants\");\n      setRestaurants(response.data);\n    };\n\n    initRestaurants();\n  }, []);\n\n  useEffect(() => {\n    const locateUser = () => {\n      function success(position) {\n        const coordinates = {\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        };\n\n        setNotification(null);\n        setUserLocation(coordinates);\n        setIsWithDistance(false);\n      }\n\n      function error() {\n        setNotification({\n          message: \"Location is needed to show the restaurant suggestions.\",\n          type: \"error\",\n        });\n      }\n\n      if (!navigator.geolocation) {\n        setNotification({\n          message: \"Geolocation is not supported by your browser\",\n          type: \"error\",\n        });\n      } else {\n        navigator.geolocation.getCurrentPosition(success, error);\n      }\n    };\n\n    locateUser();\n  }, []);\n\n  useEffect(() => {\n    const addDistanceToRestaurants = () => {\n      const restaurantsWithDistances = restaurants.map((r) => {\n        r.distance = calculateDistanceBetweenPoints(\n          userLocation.lat,\n          userLocation.lon,\n          r.latlon.x,\n          r.latlon.y\n        );\n        return r;\n      });\n      setRestaurants(restaurantsWithDistances);\n      setIsWithDistance(true);\n    };\n\n    if (userLocation && restaurants && !isWithDistance) {\n      addDistanceToRestaurants();\n    }\n  }, [userLocation, restaurants, isWithDistance]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Router>\n            <Header />\n            <Switch>\n              <Route path=\"/addRestaurant\">\n                <RestaurantForm userLocation={userLocation} />\n              </Route>\n              <Route path=\"/\">\n                <Notification notification={notification} />\n                <RestaurantSuggestions\n                  restaurants={restaurants}\n                  setRestaurants={setRestaurants}\n                  userLocation={userLocation}\n                  isWithDistance={isWithDistance}\n                  setNotification={setNotification}\n                />\n              </Route>\n            </Switch>\n          </Router>\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"fontsource-roboto/latin-300-normal.css\";\nimport \"fontsource-roboto/latin-400-normal.css\";\nimport \"fontsource-roboto/latin-500-normal.css\";\nimport \"fontsource-roboto/latin-700-normal.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}