{"version":3,"sources":["components/showRestaurants/RestaurantDetails.jsx","components/showRestaurants/RestaurantMap.jsx","components/showRestaurants/RestaurantSuggestions.jsx","components/Header.jsx","components/addRestaurant/SearchResultDetails.jsx","components/addRestaurant/SearchResults.jsx","utils.js","components/addRestaurant/RestaurantForm.jsx","components/Notification.jsx","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","minWidth","margin","bullet","display","RestaurantDetails","restaurant","classes","Card","className","CardContent","Typography","gutterBottom","variant","component","name","Skeleton","CardActions","Button","size","color","website","Link","href","width","height","style","marginLeft","marginBottom","RestaurantMap","userLocation","restaurantSuggestions","useState","boundingBox","setBoundingBox","map","useRef","useEffect","current","leafletElement","invalidateSize","northBound","reduce","max","cur","Math","latlon","x","lat","westBound","min","y","lon","southBound","eastBound","calculateBoundingBox","Fragment","Box","id","flex","Map","ref","useFlyTo","bounds","boundsOptions","padding","scrollWheelZoom","paddingBottom","TileLayer","url","process","attribution","Circle","center","radius","Popup","r","Marker","key","position","Tooltip","permanent","RestaurantSuggestions","restaurants","isWithDistance","setNotification","setRestaurantSuggestions","restaurantsFound","setRestaurantsFound","isTooFewResults","filteredRestaurants","filterByDistance","distance","filter","length","array","number","suffledArray","temporaryValue","randomIndex","currentIndex","floor","random","shuffle","splice","limitToRandomSuggestions","message","type","justifyContent","flexDirection","flexWrap","Array","from","index","Header","align","SearchResultDetails","searchResult","fillFormWithData","address","amenity","extratags","onClick","SearchResults","searchResults","place_id","deg2rad","deg","PI","calculateBoundingBoxAroundLocation","x1","y1","x2","y2","RestaurantForm","setSearchResults","fetchSearchResults","searchQuery","a","console","log","fetch","response","json","data","alert","formikSearchForm","useFormik","initialValues","search","onSubmit","values","JSON","stringify","formikAddRestaurant","subtitle","params","axios","post","res","handleSubmit","htmlFor","onChange","handleChange","value","setFieldValue","Alert","props","elevation","theme","marginTop","spacing","Notification","notification","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","App","setRestaurants","setUserLocation","setIsWithDistance","get","initRestaurants","navigator","geolocation","getCurrentPosition","coordinates","coords","latitude","longitude","restaurantsWithDistances","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","sqrt","toFixed","calculateDistanceBetweenPoints","addDistanceToRestaurants","CssBaseline","Container","path","ReactDOM","render","document","getElementById"],"mappings":"qRAYMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVC,SAAU,IACVC,OAAQ,WAEVC,OAAQ,CACNC,QAAS,eACTF,OAAQ,WA4CGG,EAxCW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrBC,EAAUV,IACcU,EAAQJ,OAEtC,OACE,kBAACK,EAAA,EAAD,CAAMC,UAAWF,EAAQR,MACvB,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CR,EAAaA,EAAWS,KAAO,kBAACC,EAAA,EAAD,QAYpC,kBAACC,EAAA,EAAD,KACGX,EACC,kBAACY,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAM,WACxBd,EAAWe,SACV,kBAACC,EAAA,EAAD,CAAMC,KAAMjB,EAAWe,SAAvB,YAIJ,kBAACL,EAAA,EAAD,CACEH,QAAQ,OACRW,MAAO,GACPC,OAAQ,GACRC,MAAO,CAAEC,WAAY,MAAOC,aAAc,Y,+DC8CvCC,EAlGO,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,sBAA4B,EAK3BC,mBAJf,CACrB,CAAC,WAAY,WACb,CAAC,YAAa,YAHiD,mBAK1DC,EAL0D,KAK7CC,EAL6C,KAM3DC,EAAMC,mBA6CZ,OA3CAC,qBAAU,WACRF,EAAIG,QAAQC,eAAeC,oBAG7BH,qBAAU,WAkCJP,GAjCyB,WAC3B,GAAKC,EAKE,CACL,IAAMU,EAAaV,EAAsBW,QACvC,SAACC,EAAKC,GAAN,OAAcC,KAAKF,IAAIA,EAAKC,EAAIE,OAAOC,KACvCjB,EAAakB,KAGTC,EAAYlB,EAAsBW,QACtC,SAACQ,EAAKN,GAAN,OAAcC,KAAKK,IAAIA,EAAKN,EAAIE,OAAOK,KACvCrB,EAAasB,KAGTC,EAAatB,EAAsBW,QACvC,SAACQ,EAAKN,GAAN,OAAcC,KAAKK,IAAIA,EAAKN,EAAIE,OAAOC,KACvCjB,EAAakB,KAGTM,EAAYvB,EAAsBW,QACtC,SAACC,EAAKC,GAAN,OAAcC,KAAKF,IAAIA,EAAKC,EAAIE,OAAOK,KACvCrB,EAAasB,KAGflB,EAAe,CACb,CAACO,EAAYa,GACb,CAACD,EAAYJ,UA3Bff,EAAe,CACb,CAACJ,EAAakB,IAAKlB,EAAasB,KAChC,CAACtB,EAAakB,IAAKlB,EAAasB,OA8BpCG,KAED,CAACxB,EAAuBG,EAAgBJ,IAGzC,kBAAC,IAAM0B,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,MACHC,KAAK,IACLzD,OAAO,OAGP,kBAAC0D,EAAA,EAAD,CACEC,IAAK1B,EACL2B,SAAS,OACTC,OAAQ9B,EACR+B,cAAe,CAAEC,QAAS,CAAC,GAAI,KAC/BC,iBAAiB,EACjBxC,MAAO,CACLF,MAAO,OACPvB,SAAU,QACVkE,cAAe,mBAGjB,kBAACC,EAAA,EAAD,CACEC,IAAG,iGAA4FC,4FAC/FC,YAAY,+LAEbzC,GACC,kBAAC0C,EAAA,EAAD,CAAQC,OAAQ3C,EAAc4C,OAAQ,IACpC,kBAACC,EAAA,EAAD,KACE,kBAAChE,EAAA,EAAD,CAAYE,QAAQ,aAApB,mBAILkB,GACCA,EAAsBI,KAAI,SAACyC,GAAD,OACxB,kBAACC,EAAA,EAAD,CAAQC,IAAKF,EAAElB,GAAIqB,SAAU,CAACH,EAAE9B,OAAOC,EAAG6B,EAAE9B,OAAOK,IACjD,kBAAC6B,EAAA,EAAD,CAASC,WAAS,GAAEL,EAAE7D,MACtB,kBAAC4D,EAAA,EAAD,KACE,kBAAChE,EAAA,EAAD,CAAYE,QAAQ,MAAM+D,EAAE7D,MAC5B,kBAACO,EAAA,EAAD,CAAMC,KAAMqD,EAAEvD,SAAUuD,EAAEvD,kBCmB7B6D,EA1Ge,SAAC,GAKxB,IAJLC,EAII,EAJJA,YACArD,EAGI,EAHJA,aACAsD,EAEI,EAFJA,eACAC,EACI,EADJA,gBACI,EACsDrD,qBADtD,mBACGD,EADH,KAC0BuD,EAD1B,OAE4CtD,oBAAS,GAFrD,mBAEGuD,EAFH,KAEqBC,EAFrB,KAiEJ,OA3DAnD,qBAAU,WACR,IAAIoD,GAAkB,EA2CtB,GAAIN,GAAerD,GAAgBsD,EAAgB,CACjD,IAAMM,EA1CiB,SAAnBC,EAAoBC,GACxB,IAAIF,EAAsBP,EAAYU,QACpC,SAACjB,GAAD,OAAOA,EAAEgB,SAAWA,EAAW,OAGjC,OAAKH,GAAmBC,EAAoBI,OAAS,GACnDL,GAAkB,EACXE,EAZyB,MAeC,IAA/BD,EAAoBI,OACf,KAEFJ,EA6BqBC,CAhDH,KAiDrBD,EA3B2B,SAACK,EAAOC,GACvC,IAAMC,EAIR,SAAiBF,GACf,IACEG,EACAC,EAFEC,EAAeL,EAAMD,OAKzB,KAAO,IAAMM,GAEXD,EAActD,KAAKwD,MAAMxD,KAAKyD,SAAWF,GAIzCF,EAAiBH,EAHjBK,GAAgB,GAIhBL,EAAMK,GAAgBL,EAAMI,GAC5BJ,EAAMI,GAAeD,EAGvB,OAAOH,EArBcQ,CAAQR,GAC7BT,EAAyBW,EAAaO,OAAO,EAAGR,IA0B9CS,CAAyBf,EAAqB,IAE9CL,EAAgB,CACdqB,QACE,4FACFC,KAAM,UAERnB,GAAoB,OAGvB,CAACL,EAAarD,EAAcsD,EAAgBC,IAG7C,oCACE,kBAAC5B,EAAA,EAAD,CACEC,GAAG,yBACHtD,QAAQ,OACRuD,KAAK,WACLiD,eAAe,SACfC,cAAc,MACdC,SAAS,QAGRvB,GACC,kBAAC9B,EAAA,EAAD,CACErD,QAAQ,OACRyG,cAAc,WAGZ9E,GAEEgF,MAAMC,KAAK,IAAID,MAAM,KACvB5E,KAAI,SAACyC,EAAGqC,GAAJ,OACJ,kBAACxD,EAAA,EAAD,CAAKqB,IAAKmC,GACR,kBAAC,EAAD,CAAmB3G,WAAYsE,SAKvC,kBAAC,EAAD,CACE9C,aAAcA,EACdC,sBAAuBA,OC3FlBmF,EAVA,WACb,OACE,6BACE,kBAACvG,EAAA,EAAD,CAAY+C,GAAG,cAAc7C,QAAQ,KAAKsG,MAAM,SAASvG,cAAY,GAArE,mB,iBCFAf,EAAYC,YAAW,CAC3BC,KAAM,CACJG,OAAQ,cA+CGkH,EA3Ca,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,iBACrC/G,EAAUV,IAEVkB,EAAOsG,EAAaE,QAAQC,QAE5BnG,EAAUgG,EAAaI,UAAUpG,QACjCyB,EAAM,UAAMuE,EAAarE,IAAnB,YAA0BqE,EAAajE,KAenD,OACE,kBAAC5C,EAAA,EAAD,CAAMC,UAAWF,EAAQR,MACvB,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYE,QAAQ,MAAME,GAC1B,kBAACO,EAAA,EAAD,CAAMC,KAAMF,GAAUA,GAMtB,6BACA,kBAACH,EAAA,EAAD,CACEE,MAAM,UACNsG,QAAS,kBAAMJ,EAAiBvG,EA9BvB,GA8BuCM,EAASyB,KAF3D,oBCnBO6E,EAnBO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,cAAeN,EAAuB,EAAvBA,iBACtC,OACE,kBAAC7D,EAAA,EAAD,CACEC,GAAG,iBACHtD,QAAQ,OACRyG,cAAc,MACdD,eAAe,UAEdgB,EAAczF,KAAI,SAACyC,GAAD,OACjB,kBAAC,EAAD,CACEE,IAAKF,EAAEiD,SACPR,aAAczC,EACd0C,iBAAkBA,SCDtBQ,EAAU,SAACC,GACf,OAAOA,GAAOlF,KAAKmF,GAAK,MAGbC,EAAqC,SAACnG,GAOjD,MAAO,CAAEoG,GALApG,EAAasB,IAAM,IAKf+E,GAJJrG,EAAakB,IAAM,IAIXoF,GAHRtG,EAAasB,IAAM,IAGPiF,GAFZvG,EAAakB,IAAM,MCoGfsF,EArHQ,SAAC,GAAsB,IAApBxG,EAAmB,EAAnBA,aAAmB,EACDE,mBAAS,IADR,mBACpC4F,EADoC,KACrBW,EADqB,KAGrCC,EAAkB,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,+DACET,EAAmCnG,GAAtDoG,EADiB,EACjBA,GAAIC,EADa,EACbA,GAAIC,EADS,EACTA,GAAIC,EADK,EACLA,GACpBM,QAAQC,IAAI,iBAAkBV,EAAIC,EAAIC,EAAIC,GAFjB,SAIJQ,MAAM,2DAAD,OACmCJ,EADnC,wCAC8EP,EAD9E,YACoFC,EADpF,YAC0FC,EAD1F,YACgGC,EADhG,2BAJD,cAIrBS,EAJqB,gBAORA,EAASC,OAPD,QAOrBC,EAPqB,QAQhBlD,QACP6C,QAAQC,IAAII,GACZT,EAAiBS,IAEjBC,MAAM,2BAZiB,2CAAH,sDAuBlBC,EAAmBC,YAAU,CACjCC,cAAe,CACbC,OAAQ,IAEVC,SAAU,SAACC,GACTf,EAAmBgB,KAAKC,UAAUF,EAAOF,YAIvCK,EAAsBP,YAAU,CACpCC,cAAe,CACbrI,KAAM,GACN4I,SAAU,GACVtI,QAAS,GACTyB,OAAQ,IAEVwG,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAb,EAAA,6DACFkB,EAAS,CACb7I,KAAMwI,EAAOxI,KACb4I,SAAUJ,EAAOI,SACjBtI,QAASkI,EAAOlI,QAChByB,OAAO,IAAD,OAAMyG,EAAOzG,OAAb,MALA,SAOU+G,IAAMC,KAAK,eAAgBF,GAPrC,OAOFG,EAPE,OAQRpB,QAAQC,IAAI,aAAcmB,EAAIf,MARtB,2CAAF,mDAAC,KAYX,OACE,kBAACvF,EAAA,EAAD,KACE,kBAAC9C,EAAA,EAAD,CAAYE,QAAQ,MAApB,wBACA,0BAAMyI,SAAUJ,EAAiBc,cAC/B,2BAAOC,QAAQ,UAAf,kCACA,2BACEvG,GAAG,SACH3C,KAAK,SACL4F,KAAK,OACLuD,SAAUhB,EAAiBiB,aAC3BC,MAAOlB,EAAiBK,OAAOF,SAEjC,4BAAQ1C,KAAK,UAAb,WAEF,kBAAC,EAAD,CACEiB,cAAeA,EACfN,iBAnDmB,SAACvG,EAAM4I,EAAUtI,EAASyB,GACjD4G,EAAoBW,cAAc,OAAQtJ,GAC1C2I,EAAoBW,cAAc,WAAYV,GAC9CD,EAAoBW,cAAc,UAAWhJ,GAC7CqI,EAAoBW,cAAc,SAAUvH,MAkD1C,kBAACnC,EAAA,EAAD,CAAYE,QAAQ,MAApB,gBACA,0BAAMyI,SAAUI,EAAoBM,cAClC,2BAAOC,QAAQ,QAAf,QACA,2BACEvG,GAAG,OACH3C,KAAK,OACL4F,KAAK,OACLuD,SAAUR,EAAoBS,aAC9BC,MAAOV,EAAoBH,OAAOxI,OAEpC,6BACA,2BAAOkJ,QAAQ,YAAf,aACA,2BACEvG,GAAG,WACH3C,KAAK,WACL4F,KAAK,OACLuD,SAAUR,EAAoBS,aAC9BC,MAAOV,EAAoBH,OAAOI,WAEpC,6BACA,2BAAOM,QAAQ,WAAf,WACA,2BACEvG,GAAG,UACH3C,KAAK,UACL4F,KAAK,OACLuD,SAAUR,EAAoBS,aAC9BC,MAAOV,EAAoBH,OAAOlI,UAEpC,6BACA,2BAAO4I,QAAQ,UAAf,wBACA,2BACEvG,GAAG,SACH3C,KAAK,SACL4F,KAAK,OACLuD,SAAUR,EAAoBS,aAC9BC,MAAOV,EAAoBH,OAAOzG,SAEpC,6BACA,4BAAQ6D,KAAK,UAAb,sB,kCC1FR,SAAS2D,EAAMC,GACb,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAG3J,QAAQ,UAAa0J,IAGtD,IAAM1K,EAAYC,aAAW,SAAC2K,GAAD,MAAY,CACvC1K,KAAM,CACJyB,MAAO,OACP,YAAa,CACXkJ,UAAWD,EAAME,QAAQ,SAqChBC,EAhCM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAChBtK,EAAUV,IADyB,EAEjBmC,oBAAS,GAFQ,mBAElC8I,EAFkC,KAE5BC,EAF4B,KAInCC,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJH,GAAQ,IAGV,OAAqB,OAAjBF,EACK,KAGL,yBAAKpK,UAAWF,EAAQR,MACtB,kBAACoL,EAAA,EAAD,CACEL,KAAMA,EACNM,iBAAkB,IAClBC,QAASL,EACTM,aAAc,CAAEC,SAAU,MAAOC,WAAY,WAE7C,kBAAC,EAAD,CAAOH,QAASL,EAAaS,SAAS,WACnCZ,EAAanE,YCiFXgF,EAvIH,WAAO,IAAD,EACsB1J,mBAAS,MAD/B,mBACTmD,EADS,KACIwG,EADJ,OAEwB3J,mBAAS,MAFjC,mBAETF,EAFS,KAEK8J,EAFL,OAG4B5J,oBAAS,GAHrC,mBAGToD,EAHS,KAGOyG,EAHP,OAIwB7J,mBAAS,MAJjC,mBAIT6I,EAJS,KAIKxF,EAJL,KAoEhB,OA9DAhD,qBAAU,YACa,uCAAG,4BAAAqG,EAAA,sEACCmB,IAAMiC,IAAI,gBADX,OAChBhD,EADgB,OAEtB6C,EAAe7C,EAASE,MAFF,2CAAH,qDAKrB+C,KACC,IAEH1J,qBAAU,WAoBD2J,UAAUC,YAMbD,UAAUC,YAAYC,oBAxBxB,SAAiBnH,GACf,IAAMoH,EAAc,CAClBnJ,IAAK+B,EAASqH,OAAOC,SACrBjJ,IAAK2B,EAASqH,OAAOE,WAGvBjH,EAAgB,MAChBuG,EAAgBO,GAChBN,GAAkB,MAGpB,WACExG,EAAgB,CACdqB,QAAS,yDACTC,KAAM,aAKRtB,EAAgB,CACdqB,QAAS,+CACTC,KAAM,YAQX,IAEHtE,qBAAU,WAeJP,GAAgBqD,IAAgBC,GAdH,WAC/B,IAAMmH,EAA2BpH,EAAYhD,KAAI,SAACyC,GAOhD,OANAA,EAAEgB,SH9DoC,SAAC4G,EAAMC,EAAMC,EAAMC,GAC/D,IACIC,EAAO9E,EAAQ4E,EAAOF,GACtBK,EAAO/E,EAAQ6E,EAAOF,GACtB/D,EACF7F,KAAKiK,IAAIF,EAAO,GAAK/J,KAAKiK,IAAIF,EAAO,GACrC/J,KAAKkK,IAAIjF,EAAQ0E,IACf3J,KAAKkK,IAAIjF,EAAQ4E,IACjB7J,KAAKiK,IAAID,EAAO,GAChBhK,KAAKiK,IAAID,EAAO,GAGpB,OAXkB,MASV,EAAIhK,KAAKmK,MAAMnK,KAAKoK,KAAKvE,GAAI7F,KAAKoK,KAAK,EAAIvE,MAClBwE,QAAQ,GGmDtBC,CACXrL,EAAakB,IACblB,EAAasB,IACbwB,EAAE9B,OAAOC,EACT6B,EAAE9B,OAAOK,GAEJyB,KAET+G,EAAeY,GACfV,GAAkB,GAIlBuB,KAED,CAACtL,EAAcqD,EAAaC,IAG7B,kBAAC,IAAM5B,SAAP,KACE,kBAAC6J,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWtN,SAAS,KAAK0B,MAAO,CAAEuC,QAAS,SACzC,kBAACR,EAAA,EAAD,CACErD,QAAQ,OACRyG,cAAc,UAId,kBAAC,IAAD,KACE,kBAAC,EAAD,MAkCA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0G,KAAK,kBACV,kBAAC,EAAD,CAAgBzL,aAAcA,KAEhC,kBAAC,IAAD,CAAOyL,KAAK,KACV,kBAAC,EAAD,CAAc1C,aAAcA,IAC5B,kBAAC,EAAD,CACE1F,YAAaA,EACbwG,eAAgBA,EAChB7J,aAAcA,EACdsD,eAAgBA,EAChBC,gBAAiBA,W,4BC/HnCmI,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.d0099fca.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Link,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 296,\n    minWidth: 250,\n    margin: \"8px 8px\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 4px\",\n  },\n});\n\nconst RestaurantDetails = ({ restaurant }) => {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {restaurant ? restaurant.name : <Skeleton />}\n        </Typography>\n        {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {restaurant ? (\n            <>\n              Takeaway{bull}Big groups{bull}Fast service{bull}Buffet\n            </>\n          ) : (\n            <Skeleton width=\"60%\" />\n          )}\n        </Typography> */}\n      </CardContent>\n      <CardActions>\n        {restaurant ? (\n          <Button size=\"small\" color=\"primary\">\n            {restaurant.website && (\n              <Link href={restaurant.website}>Website</Link>\n            )}\n          </Button>\n        ) : (\n          <Skeleton\n            variant=\"rect\"\n            width={56}\n            height={22}\n            style={{ marginLeft: \"8px\", marginBottom: \"8px\" }}\n          />\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default RestaurantDetails;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Map, TileLayer, Marker, Popup, Tooltip, Circle } from \"react-leaflet\";\nimport { Link, Typography, Box } from \"@material-ui/core\";\n\nconst RestaurantMap = ({ userLocation, restaurantSuggestions }) => {\n  const initialMapView = [\n    [62.9894714, 34.558059],\n    [38.1706012, -3.976497],\n  ];\n  const [boundingBox, setBoundingBox] = useState(initialMapView);\n  const map = useRef();\n\n  useEffect(() => {\n    map.current.leafletElement.invalidateSize();\n  });\n\n  useEffect(() => {\n    const calculateBoundingBox = () => {\n      if (!restaurantSuggestions) {\n        setBoundingBox([\n          [userLocation.lat, userLocation.lon],\n          [userLocation.lat, userLocation.lon],\n        ]);\n      } else {\n        const northBound = restaurantSuggestions.reduce(\n          (max, cur) => Math.max(max, cur.latlon.x),\n          userLocation.lat\n        );\n\n        const westBound = restaurantSuggestions.reduce(\n          (min, cur) => Math.min(min, cur.latlon.y),\n          userLocation.lon\n        );\n\n        const southBound = restaurantSuggestions.reduce(\n          (min, cur) => Math.min(min, cur.latlon.x),\n          userLocation.lat\n        );\n\n        const eastBound = restaurantSuggestions.reduce(\n          (max, cur) => Math.max(max, cur.latlon.y),\n          userLocation.lon\n        );\n\n        setBoundingBox([\n          [northBound, eastBound],\n          [southBound, westBound],\n        ]);\n      }\n    };\n    if (userLocation) {\n      calculateBoundingBox();\n    }\n  }, [restaurantSuggestions, setBoundingBox, userLocation]);\n\n  return (\n    <React.Fragment>\n      <Box\n        id=\"map\"\n        flex=\"1\"\n        margin=\"8px\"\n        // style={{ border: \"1px dashed olive\" }}\n      >\n        <Map\n          ref={map}\n          useFlyTo=\"true\"\n          bounds={boundingBox}\n          boundsOptions={{ padding: [35, 35] }}\n          scrollWheelZoom={false}\n          style={{\n            width: \"100%\",\n            minWidth: \"250px\",\n            paddingBottom: \"min(75%, 80vh)\",\n          }}\n        >\n          <TileLayer\n            url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}?access_token=${process.env.REACT_APP_MAPBOX}`}\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a>, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, &copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n          />\n          {userLocation && (\n            <Circle center={userLocation} radius={15}>\n              <Popup>\n                <Typography variant=\"subtitle1\">Your location</Typography>\n              </Popup>\n            </Circle>\n          )}\n          {restaurantSuggestions &&\n            restaurantSuggestions.map((r) => (\n              <Marker key={r.id} position={[r.latlon.x, r.latlon.y]}>\n                <Tooltip permanent>{r.name}</Tooltip>\n                <Popup>\n                  <Typography variant=\"h6\">{r.name}</Typography>\n                  <Link href={r.website}>{r.website}</Link>\n                </Popup>\n              </Marker>\n            ))}\n        </Map>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default RestaurantMap;\n","import React, { useEffect, useState } from \"react\";\nimport RestaurantDetails from \"./RestaurantDetails\";\nimport { Box } from \"@material-ui/core\";\nimport RestaurantMap from \"./RestaurantMap\";\n\nconst RestaurantSuggestions = ({\n  restaurants,\n  userLocation,\n  isWithDistance,\n  setNotification,\n}) => {\n  const [restaurantSuggestions, setRestaurantSuggestions] = useState();\n  const [restaurantsFound, setRestaurantsFound] = useState(true);\n  const searchRadiusInMeters = 700;\n  const secondarySearchRadiusInMeters = 2000;\n\n  useEffect(() => {\n    let isTooFewResults = false;\n\n    const filterByDistance = (distance) => {\n      let filteredRestaurants = restaurants.filter(\n        (r) => r.distance < distance / 1000\n      );\n\n      if (!isTooFewResults && filteredRestaurants.length < 2) {\n        isTooFewResults = true;\n        return filterByDistance(secondarySearchRadiusInMeters);\n      }\n\n      if (filteredRestaurants.length === 0) {\n        return null;\n      }\n      return filteredRestaurants;\n    };\n\n    const limitToRandomSuggestions = (array, number) => {\n      const suffledArray = shuffle(array);\n      setRestaurantSuggestions(suffledArray.splice(0, number));\n    };\n\n    function shuffle(array) {\n      var currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n\n    if (restaurants && userLocation && isWithDistance) {\n      const filteredRestaurants = filterByDistance(searchRadiusInMeters);\n      if (filteredRestaurants) {\n        limitToRandomSuggestions(filteredRestaurants, 3);\n      } else {\n        setNotification({\n          message:\n            \"No restaurants found near your location. Try refreshing the page at a different location.\",\n          type: \"error\",\n        });\n        setRestaurantsFound(false);\n      }\n    }\n  }, [restaurants, userLocation, isWithDistance, setNotification]);\n\n  return (\n    <>\n      <Box\n        id=\"restaurant-suggestions\"\n        display=\"flex\"\n        flex=\"1 0 auto\"\n        justifyContent=\"center\"\n        flexDirection=\"row\"\n        flexWrap=\"wrap\"\n        // style={{ border: \"1px solid blue\" }}\n      >\n        {restaurantsFound && (\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            // style={{ border: \"1px solid gold\" }}\n          >\n            {(restaurantSuggestions\n              ? restaurantSuggestions\n              : Array.from(new Array(3))\n            ).map((r, index) => (\n              <Box key={index}>\n                <RestaurantDetails restaurant={r} />\n              </Box>\n            ))}\n          </Box>\n        )}\n        <RestaurantMap\n          userLocation={userLocation}\n          restaurantSuggestions={restaurantSuggestions}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default RestaurantSuggestions;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Header = () => {\n  return (\n    <div>\n      <Typography id=\"page-header\" variant=\"h4\" align=\"center\" gutterBottom>\n        Lunch Near Me\n      </Typography>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Card, CardContent, Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"8px 16px\",\n  },\n});\n\nconst SearchResultDetails = ({ searchResult, fillFormWithData }) => {\n  const classes = useStyles();\n\n  const name = searchResult.address.amenity;\n  const subtitle = \"\";\n  const website = searchResult.extratags.website;\n  const latlon = `${searchResult.lat},${searchResult.lon}`;\n  // const addressLine1 = [\n  //   searchResult.address.road,\n  //   \" \",\n  //   searchResult.address.house_number,\n  // ].join(\"\");\n\n  // const addressLine2 = [\n  //   searchResult.address.postcode,\n  //   \" \",\n  //   searchResult.address.city || searchResult.address.town,\n  //   \", \",\n  //   searchResult.address.country,\n  // ].join(\"\");\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\">{name}</Typography>\n        <Link href={website}>{website}</Link>\n        {/* <Typography variant=\"body1\">\n          {addressLine1}\n          <br />\n          {addressLine2}\n        </Typography> */}\n        <br />\n        <Button\n          color=\"primary\"\n          onClick={() => fillFormWithData(name, subtitle, website, latlon)}\n        >\n          Fill the data\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SearchResultDetails;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport SearchResultDetails from \"./SearchResultDetails\";\n\nconst SearchResults = ({ searchResults, fillFormWithData }) => {\n  return (\n    <Box\n      id=\"search-results\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n    >\n      {searchResults.map((r) => (\n        <SearchResultDetails\n          key={r.place_id}\n          searchResult={r}\n          fillFormWithData={fillFormWithData}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default SearchResults;\n","export const calculateDistanceBetweenPoints = (lat1, lon1, lat2, lon2) => {\n  var earthRadius = 6371;\n  var dLat = deg2rad(lat2 - lat1);\n  var dLon = deg2rad(lon2 - lon1);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var distance = (earthRadius * c).toFixed(2);\n  return distance;\n};\n\nconst deg2rad = (deg) => {\n  return deg * (Math.PI / 180);\n};\n\nexport const calculateBoundingBoxAroundLocation = (userLocation) => {\n  // Roughly 50 km difference to the original location for each variable\n  let x1 = userLocation.lon - 0.45;\n  let y1 = userLocation.lat - 0.45;\n  let x2 = userLocation.lon + 0.45;\n  let y2 = userLocation.lat + 0.45;\n\n  return { x1, y1, x2, y2 };\n};\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport SearchResults from \"./SearchResults\";\nimport { calculateBoundingBoxAroundLocation } from \"../../utils\";\nimport axios from \"axios\";\n\nconst RestaurantForm = ({ userLocation }) => {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const fetchSearchResults = async (searchQuery) => {\n    const { x1, y1, x2, y2 } = calculateBoundingBoxAroundLocation(userLocation);\n    console.log(\"Bounding box: \", x1, y1, x2, y2);\n\n    let response = await fetch(\n      `https://nominatim.openstreetmap.org/?addressdetails=1&q=${searchQuery}&format=json&limit=5&viewbox=${x1},${y1},${x2},${y2}&extratags=1&bounded=1`\n    );\n    let data = await response.json();\n    if (data.length) {\n      console.log(data);\n      setSearchResults(data);\n    } else {\n      alert(\"No search results found\");\n    }\n  };\n\n  const fillFormWithData = (name, subtitle, website, latlon) => {\n    formikAddRestaurant.setFieldValue(\"name\", name);\n    formikAddRestaurant.setFieldValue(\"subtitle\", subtitle);\n    formikAddRestaurant.setFieldValue(\"website\", website);\n    formikAddRestaurant.setFieldValue(\"latlon\", latlon);\n  };\n\n  const formikSearchForm = useFormik({\n    initialValues: {\n      search: \"\",\n    },\n    onSubmit: (values) => {\n      fetchSearchResults(JSON.stringify(values.search));\n    },\n  });\n\n  const formikAddRestaurant = useFormik({\n    initialValues: {\n      name: \"\",\n      subtitle: \"\",\n      website: \"\",\n      latlon: \"\",\n    },\n    onSubmit: async (values) => {\n      const params = {\n        name: values.name,\n        subtitle: values.subtitle,\n        website: values.website,\n        latlon: `(${values.latlon})`,\n      };\n      const res = await axios.post(\"/restaurants\", params);\n      console.log(\"res.data: \", res.data);\n    },\n  });\n\n  return (\n    <Box>\n      <Typography variant=\"h5\">Add a new restaurant</Typography>\n      <form onSubmit={formikSearchForm.handleSubmit}>\n        <label htmlFor=\"search\">Search for a restaurant to add</label>\n        <input\n          id=\"search\"\n          name=\"search\"\n          type=\"text\"\n          onChange={formikSearchForm.handleChange}\n          value={formikSearchForm.values.search}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <SearchResults\n        searchResults={searchResults}\n        fillFormWithData={fillFormWithData}\n      />\n\n      <Typography variant=\"h6\">Add manually</Typography>\n      <form onSubmit={formikAddRestaurant.handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.name}\n        />\n        <br />\n        <label htmlFor=\"subtitle\">Specifier</label>\n        <input\n          id=\"subtitle\"\n          name=\"subtitle\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.subtitle}\n        />\n        <br />\n        <label htmlFor=\"website\">Website</label>\n        <input\n          id=\"website\"\n          name=\"website\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.website}\n        />\n        <br />\n        <label htmlFor=\"latlon\">Coordinates lat, lon</label>\n        <input\n          id=\"latlon\"\n          name=\"latlon\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.latlon}\n        />\n        <br />\n        <button type=\"submit\">Add to database</button>\n      </form>\n    </Box>\n  );\n};\n\nexport default RestaurantForm;\n","// import React from \"react\";\n// import { CircularProgress } from \"@material-ui/core\";\n\n// const Notification = ({ notification }) => {\n//   if (notification === null) {\n//     return null;\n//   }\n\n//   if (notification.type === \"spinner\") {\n//     return (\n//       <div>\n//         {notification.message}\n//         <CircularProgress />\n//       </div>\n//     );\n//   }\n\n//   return <div>{notification.message}</div>;\n// };\n\n// export default Notification;\n\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Notification = ({ notification }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  if (notification === null) {\n    return null;\n  } else {\n    return (\n      <div className={classes.root}>\n        <Snackbar\n          open={open}\n          autoHideDuration={6000}\n          onClose={handleClose}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        >\n          <Alert onClose={handleClose} severity=\"warning\">\n            {notification.message}\n          </Alert>\n        </Snackbar>\n      </div>\n    );\n  }\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport RestaurantSuggestions from \"./components/showRestaurants/RestaurantSuggestions\";\nimport Header from \"./components/Header\";\nimport { Container, Box } from \"@material-ui/core\";\nimport RestaurantForm from \"./components/addRestaurant/RestaurantForm\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Notification from \"./components/Notification\";\nimport { calculateDistanceBetweenPoints } from \"./utils\";\n\nconst App = () => {\n  const [restaurants, setRestaurants] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [isWithDistance, setIsWithDistance] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    const initRestaurants = async () => {\n      const response = await axios.get(\"/restaurants\");\n      setRestaurants(response.data);\n    };\n\n    initRestaurants();\n  }, []);\n\n  useEffect(() => {\n    const locateUser = () => {\n      function success(position) {\n        const coordinates = {\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        };\n\n        setNotification(null);\n        setUserLocation(coordinates);\n        setIsWithDistance(false);\n      }\n\n      function error() {\n        setNotification({\n          message: \"Location is needed to show the restaurant suggestions.\",\n          type: \"error\",\n        });\n      }\n\n      if (!navigator.geolocation) {\n        setNotification({\n          message: \"Geolocation is not supported by your browser\",\n          type: \"error\",\n        });\n      } else {\n        navigator.geolocation.getCurrentPosition(success, error);\n      }\n    };\n\n    locateUser();\n  }, []);\n\n  useEffect(() => {\n    const addDistanceToRestaurants = () => {\n      const restaurantsWithDistances = restaurants.map((r) => {\n        r.distance = calculateDistanceBetweenPoints(\n          userLocation.lat,\n          userLocation.lon,\n          r.latlon.x,\n          r.latlon.y\n        );\n        return r;\n      });\n      setRestaurants(restaurantsWithDistances);\n      setIsWithDistance(true);\n    };\n\n    if (userLocation && restaurants && !isWithDistance) {\n      addDistanceToRestaurants();\n    }\n  }, [userLocation, restaurants, isWithDistance]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" style={{ padding: \"24px\" }}>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          // alignItems=\"center\"\n          // style={{ border: \"1px solid cyan\" }}\n        >\n          <Router>\n            <Header />\n            {/* <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              style={{\n                // border: \"1px solid olive\",\n                padding: \"10px\",\n                margin: \"10px\",\n              }}\n            >\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n                <Button\n                  id=\"locate-button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disableElevation\n                  type=\"button\"\n                  onClick={() => locateUser(setUserLocation, setNotification)}\n                  style={{ marginBottom: \"10px\" }}\n                >\n                  Show me my options\n                </Button>\n              </Link>\n              <Link to=\"/addRestaurant\" style={{ textDecoration: \"none\" }}>\n                <Button\n                  id=\"add-restaurant-button\"\n                  color=\"secondary\"\n                  onClick={() => locateUser(setUserLocation, setNotification)}\n                >\n                  Add a new restaurant\n                </Button>\n              </Link>\n            </Box> */}\n            <Switch>\n              <Route path=\"/addRestaurant\">\n                <RestaurantForm userLocation={userLocation} />\n              </Route>\n              <Route path=\"/\">\n                <Notification notification={notification} />\n                <RestaurantSuggestions\n                  restaurants={restaurants}\n                  setRestaurants={setRestaurants}\n                  userLocation={userLocation}\n                  isWithDistance={isWithDistance}\n                  setNotification={setNotification}\n                />\n              </Route>\n            </Switch>\n          </Router>\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"fontsource-roboto/latin-300-normal.css\";\nimport \"fontsource-roboto/latin-400-normal.css\";\nimport \"fontsource-roboto/latin-500-normal.css\";\nimport \"fontsource-roboto/latin-700-normal.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}