{"version":3,"sources":["view/components/showRestaurants/RestaurantDetails.tsx","view/components/showRestaurants/RestaurantList.tsx","view/components/showRestaurants/RestaurantMap.tsx","view/components/showRestaurants/RestaurantSuggestions.tsx","view/components/Header.tsx","view/components/addRestaurant/SearchResultDetails.tsx","view/components/addRestaurant/SearchResults.tsx","redux/utils.ts","redux/notification.ts","redux/notificationTypes.ts","view/components/addRestaurant/RestaurantForm.tsx","view/components/Notification.tsx","redux/location.ts","redux/locationTypes.ts","redux/restaurantTypes.ts","redux/restaurant.ts","view/App.tsx","redux/index.ts","redux/store.ts","index.tsx"],"names":["useStyles","makeStyles","root","maxWidth","minWidth","margin","bullet","display","skeleton","marginLeft","marginBottom","RestaurantDetails","restaurant","classes","Card","className","CardContent","Typography","gutterBottom","variant","component","name","Skeleton","CardActions","Button","size","color","website","Link","href","width","height","RestaurantList","restaurantSuggestions","locationState","emptyArray","Array","from","Box","flexDirection","error","map","r","index","key","paddingBottom","RestaurantMap","initialMapView","L","useState","boundingBox","setBoundingBox","useRef","userCoordinates","useSelector","state","location","coordinates","useEffect","current","leafletElement","invalidateSize","northBound","reduce","max","cur","Math","latlon","x","lat","westBound","min","y","lng","southBound","eastBound","calculateBoundingBox","Fragment","id","flex","Map","ref","bounds","boundsOptions","padding","scrollWheelZoom","TileLayer","url","process","attribution","Circle","center","radius","Popup","Marker","position","Tooltip","permanent","RestaurantSuggestions","restaurants","justifyContent","flexWrap","Header","align","SearchResultDetails","searchResult","fillFormWithData","address","amenity","extratags","addressLine1","road","house_number","join","addressLine2","postcode","city","town","country","onClick","SearchResults","searchResults","place_id","deg2rad","deg","PI","calculateBoundingBoxAroundLocation","userLocation","x1","y1","x2","y2","initialState","msg","notificationType","open","showNotification","type","data","textField","RestaurantForm","setSearchResults","subtitle","initialFormValues","setInitialFormValues","dispatch","useDispatch","fetchSearchResults","searchQuery","a","fetch","response","json","length","console","log","alert","initialValues","search","onSubmit","values","resetForm","JSON","stringify","htmlFor","TextField","label","enableReinitialize","validationSchema","Yup","required","params","axios","post","props","disableElevation","disabled","isValid","Alert","elevation","theme","marginTop","spacing","Notification","notification","handleClose","_event","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","isLocating","didInvalidate","setLocation","coords","latitude","longitude","getPositionPromise","options","enableHighAccuracy","maximumAge","timeout","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","ADD_DISTANCES","allRestaurants","isFetching","isWithDistance","addDistanceToRestaurants","getState","restaurantsWithDistances","distance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","c","atan2","sqrt","Number","toFixed","calculateDistanceBetweenPoints","payload","setRestaurantSuggestions","array","temporaryValue","randomIndex","shuffledArray","currentIndex","floor","random","shuffleArray","filter","filterRestaurantsByDistance","splice","App","all","Error","accuracy","code","get","forEach","element","message","CssBaseline","Container","path","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1c0d644.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Link,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { Restaurant } from \"../../../redux/restaurantTypes\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 296,\n    minWidth: 250,\n    margin: \"8px 8px\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 4px\",\n  },\n  skeleton: {\n    marginLeft: \"8px\",\n    marginBottom: \"8px\",\n  },\n});\n\ntype RestaurantDetailsProps = {\n  restaurant: Restaurant;\n};\n\nconst RestaurantDetails = ({ restaurant }: RestaurantDetailsProps) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {restaurant ? restaurant.name : <Skeleton />}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        {restaurant ? (\n          <Button size=\"small\" color=\"primary\">\n            {restaurant.website && (\n              <Link href={restaurant.website}>Website</Link>\n            )}\n          </Button>\n        ) : (\n          <Skeleton\n            variant=\"rect\"\n            width={56}\n            height={22}\n            className={classes.skeleton}\n          />\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default RestaurantDetails;\n","import React from \"react\";\nimport RestaurantDetails from \"./RestaurantDetails\";\nimport { Box } from \"@material-ui/core\";\nimport { Restaurant } from \"../../../redux/restaurantTypes\";\nimport { LocationState } from \"../../../redux/locationTypes\";\n\ntype RestaurantListProps = {\n  restaurantSuggestions: Restaurant[];\n  locationState: LocationState;\n};\n\nconst RestaurantList = ({\n  restaurantSuggestions,\n  locationState,\n}: RestaurantListProps) => {\n  const emptyArray = Array.from(new Array(3));\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      {!locationState.error &&\n        (restaurantSuggestions || emptyArray).map((r, index) => (\n          <Box key={index}>\n            <RestaurantDetails restaurant={r} />\n          </Box>\n        ))}\n    </Box>\n  );\n};\n\nexport default RestaurantList;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Map, TileLayer, Marker, Popup, Tooltip, Circle } from \"react-leaflet\";\nimport { Link, Typography, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport * as L from \"leaflet\";\nimport { RootState } from \"../../../redux/store\";\nimport { Restaurant } from \"../../../redux/restaurantTypes\";\n\nconst useStyles = makeStyles({\n  map: {\n    width: \"100%\",\n    minWidth: \"250px\",\n    paddingBottom: \"min(75%, 80vh)\",\n  },\n});\n\ntype RestaurantMapProps = {\n  restaurantSuggestions: Restaurant[];\n};\n\nconst RestaurantMap = ({ restaurantSuggestions }: RestaurantMapProps) => {\n  const initialMapView = L.latLngBounds(\n    L.latLng(62.9894714, 34.558059),\n    L.latLng(38.1706012, -3.976497)\n  );\n\n  const [boundingBox, setBoundingBox] = useState<L.LatLngBounds>(\n    initialMapView\n  );\n  const map = useRef<any>();\n  const classes = useStyles();\n  const userCoordinates = useSelector(\n    (state: RootState) => state.location.coordinates\n  );\n\n  useEffect(() => {\n    map.current.leafletElement.invalidateSize();\n  });\n\n  useEffect(() => {\n    const calculateBoundingBox = () => {\n      if (!restaurantSuggestions) {\n        setBoundingBox(\n          L.latLngBounds(\n            L.latLng(userCoordinates.lat, userCoordinates.lng),\n            L.latLng(userCoordinates.lat, userCoordinates.lng)\n          )\n        );\n      } else {\n        const northBound = restaurantSuggestions.reduce(\n          (max, cur) => Math.max(max, cur.latlon.x),\n          userCoordinates.lat\n        );\n\n        const westBound = restaurantSuggestions.reduce(\n          (min, cur) => Math.min(min, cur.latlon.y),\n          userCoordinates.lng\n        );\n\n        const southBound = restaurantSuggestions.reduce(\n          (min, cur) => Math.min(min, cur.latlon.x),\n          userCoordinates.lat\n        );\n\n        const eastBound = restaurantSuggestions.reduce(\n          (max, cur) => Math.max(max, cur.latlon.y),\n          userCoordinates.lng\n        );\n\n        setBoundingBox(\n          L.latLngBounds(\n            L.latLng(northBound, eastBound),\n            L.latLng(southBound, westBound)\n          )\n        );\n      }\n    };\n    if (userCoordinates) {\n      calculateBoundingBox();\n    }\n  }, [restaurantSuggestions, setBoundingBox, userCoordinates]);\n\n  return (\n    <React.Fragment>\n      <Box id=\"map\" flex=\"1\" margin=\"8px\">\n        <Map\n          ref={map}\n          bounds={boundingBox}\n          boundsOptions={{ padding: [35, 35] }}\n          scrollWheelZoom={false}\n          className={classes.map}\n        >\n          <TileLayer\n            url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}?access_token=${process.env.REACT_APP_MAPBOX}`}\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a>, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, &copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n          />\n          {userCoordinates && (\n            <Circle center={userCoordinates} radius={15}>\n              <Popup>\n                <Typography variant=\"subtitle1\">Your location</Typography>\n              </Popup>\n            </Circle>\n          )}\n          {restaurantSuggestions &&\n            restaurantSuggestions.map((r) => (\n              <Marker key={r.id} position={[r.latlon.x, r.latlon.y]}>\n                <Tooltip permanent>{r.name}</Tooltip>\n                <Popup>\n                  <Typography variant=\"h6\">{r.name}</Typography>\n                  {r.website && <Link href={r.website}>{r.website}</Link>}\n                </Popup>\n              </Marker>\n            ))}\n        </Map>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default RestaurantMap;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport RestaurantList from \"./RestaurantList\";\nimport RestaurantMap from \"./RestaurantMap\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../redux/store\";\n\nconst RestaurantSuggestions = () => {\n  const restaurantSuggestions = useSelector(\n    (state: RootState) => state.restaurants.restaurantSuggestions\n  );\n  const locationState = useSelector((state: RootState) => state.location);\n\n  return (\n    <>\n      <Box\n        id=\"restaurant-suggestions\"\n        display=\"flex\"\n        flex=\"1 0 auto\"\n        justifyContent=\"center\"\n        flexDirection=\"row\"\n        flexWrap=\"wrap\"\n      >\n        <RestaurantList\n          restaurantSuggestions={restaurantSuggestions}\n          locationState={locationState}\n        />\n        <RestaurantMap restaurantSuggestions={restaurantSuggestions} />\n      </Box>\n    </>\n  );\n};\n\nexport default RestaurantSuggestions;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Header = () => (\n  <Typography id=\"page-header\" variant=\"h4\" align=\"center\" gutterBottom>\n    Lunch Near Me\n  </Typography>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Card, CardContent, Typography, Button } from \"@material-ui/core\";\nimport { SearchResult, FormData } from \"./RestaurantFormTypes\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"8px 16px\",\n  },\n});\n\ntype SearchResultDetailsProps = {\n  searchResult: SearchResult;\n  fillFormWithData: FormData;\n};\n\nconst SearchResultDetails = ({\n  searchResult,\n  fillFormWithData,\n}: SearchResultDetailsProps) => {\n  const classes = useStyles();\n\n  const name = searchResult.address.amenity;\n  const subtitle = \"\";\n  const website = searchResult.extratags.website || \"\";\n  const latlon = `${searchResult.lat},${searchResult.lng}`;\n  const addressLine1 = [\n    searchResult.address.road,\n    \" \",\n    searchResult.address.house_number,\n  ].join(\"\");\n\n  const addressLine2 = [\n    searchResult.address.postcode,\n    \" \",\n    searchResult.address.city || searchResult.address.town,\n    \", \",\n    searchResult.address.country,\n  ].join(\"\");\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\">{name}</Typography>\n        <Link href={website}>{website}</Link>\n        <Typography variant=\"body1\">\n          {addressLine1}\n          <br />\n          {addressLine2}\n        </Typography>\n        <br />\n        <Button\n          color=\"primary\"\n          onClick={() => fillFormWithData(name, subtitle, website, latlon)}\n        >\n          Fill the data\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SearchResultDetails;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport SearchResultDetails from \"./SearchResultDetails\";\nimport { SearchResult, FormData } from \"./RestaurantFormTypes\";\n\ntype SearchResultProps = {\n  searchResults: SearchResult[];\n  fillFormWithData: FormData;\n};\n\nconst SearchResults = ({\n  searchResults,\n  fillFormWithData,\n}: SearchResultProps) => {\n  return (\n    <Box\n      id=\"search-results\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n    >\n      {searchResults.map((r) => (\n        <SearchResultDetails\n          key={r.place_id}\n          searchResult={r}\n          fillFormWithData={fillFormWithData}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default SearchResults;\n","import { Coordinates } from \"./locationTypes\";\nimport { Restaurant } from \"./restaurantTypes\";\n\nexport const calculateDistanceBetweenPoints = (\n  lat1: number,\n  lon1: number,\n  lat2: number,\n  lon2: number\n): number => {\n  const earthRadius = 6371;\n  const dLat = deg2rad(lat2 - lat1);\n  const dLon = deg2rad(lon2 - lon1);\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const distanceInMeters = Number((earthRadius * c).toFixed(3)) * 1000;\n  return distanceInMeters;\n};\n\nconst deg2rad = (deg: number): number => {\n  return deg * (Math.PI / 180);\n};\n\nexport const calculateBoundingBoxAroundLocation = (\n  userLocation: Coordinates\n) => {\n  // Roughly 50 km\n  const offsetFromLocation = 0.45;\n\n  const x1 = userLocation.lng - offsetFromLocation;\n  const y1 = userLocation.lat - offsetFromLocation;\n  const x2 = userLocation.lng + offsetFromLocation;\n  const y2 = userLocation.lat + offsetFromLocation;\n\n  return { x1, y1, x2, y2 };\n};\n\nexport const shuffleArray = (array: Restaurant[]): Restaurant[] => {\n  let shuffledArray = [...array];\n  let currentIndex: number = shuffledArray.length,\n    temporaryValue: Restaurant,\n    randomIndex: number;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = shuffledArray[currentIndex];\n    shuffledArray[currentIndex] = shuffledArray[randomIndex];\n    shuffledArray[randomIndex] = temporaryValue;\n  }\n\n  return shuffledArray;\n};\n","import {\n  SHOW_NOTIFICATION,\n  HIDE_NOTIFICATION,\n  ShowNotificationAction,\n  HideNotificationAction,\n  NotificationActionTypes,\n  NotificationState,\n} from \"./notificationTypes\";\n\nconst initialState: NotificationState = {\n  msg: \"\",\n  notificationType: \"success\",\n  open: false,\n};\n\nexport const notificationReducer = (\n  state = initialState,\n  action: NotificationActionTypes\n): NotificationState => {\n  switch (action.type) {\n    case SHOW_NOTIFICATION:\n      return {\n        ...state,\n        msg: action.data.msg,\n        notificationType: action.data.notificationType,\n        open: action.data.open,\n      };\n    case HIDE_NOTIFICATION:\n      return {\n        ...state,\n        open: action.data.open,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const showNotification = (\n  msg: string,\n  notificationType: \"success\" | \"info\" | \"warning\" | \"error\" | undefined\n): ShowNotificationAction => {\n  return {\n    type: SHOW_NOTIFICATION,\n    data: {\n      msg,\n      notificationType,\n      open: true,\n    },\n  };\n};\n\nexport const hideNotification = (): HideNotificationAction => {\n  return {\n    type: HIDE_NOTIFICATION,\n    data: {\n      open: false,\n    },\n  };\n};\n","export const SHOW_NOTIFICATION = \"[notification] showNotification\";\nexport const HIDE_NOTIFICATION = \"[notification] hideNotification\";\n\nexport interface NotificationState {\n  msg: string;\n  notificationType: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n  open: boolean;\n}\n\nexport interface ShowNotificationAction {\n  type: typeof SHOW_NOTIFICATION;\n  data: NotificationState;\n}\n\nexport interface HideNotificationAction {\n  type: typeof HIDE_NOTIFICATION;\n  data: {\n    open: boolean;\n  };\n}\n\nexport type NotificationActionTypes =\n  | ShowNotificationAction\n  | HideNotificationAction;\n","import React, { useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport SearchResults from \"./SearchResults\";\nimport { calculateBoundingBoxAroundLocation } from \"../../../redux/utils\";\nimport { TextField } from \"formik-material-ui\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { showNotification } from \"../../../redux/notification\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../redux/store\";\n\nconst useStyles = makeStyles({\n  textField: {\n    minWidth: \"250px\",\n  },\n});\n\nconst RestaurantForm = () => {\n  const userLocation = useSelector(\n    (state: RootState) => state.location.coordinates\n  );\n  const [searchResults, setSearchResults] = useState([]);\n  const [initialFormValues, setInitialFormValues] = useState({\n    name: \"\",\n    subtitle: \"\",\n    website: \"\",\n    latlon: \"\",\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const fetchSearchResults = async (searchQuery: string) => {\n    const { x1, y1, x2, y2 } = calculateBoundingBoxAroundLocation(userLocation);\n\n    const response = await fetch(\n      `https://nominatim.openstreetmap.org/?addressdetails=1&q=${searchQuery}&format=json&limit=5&viewbox=${x1},${y1},${x2},${y2}&extratags=1&bounded=1`\n    );\n    let data = await response.json();\n    if (data.length) {\n      console.log(data);\n      setSearchResults(data);\n    } else {\n      alert(\"No search results found\");\n    }\n  };\n\n  const fillFormWithData = (\n    name: string,\n    subtitle: string,\n    website: string,\n    latlon: string\n  ): void => {\n    setInitialFormValues({\n      name: name,\n      subtitle: subtitle,\n      website: website,\n      latlon: latlon,\n    });\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\">Add a new restaurant</Typography>\n      <Formik\n        initialValues={{\n          search: \"\",\n        }}\n        onSubmit={(values, { resetForm }) => {\n          fetchSearchResults(JSON.stringify(values.search));\n          resetForm();\n          dispatch(showNotification(\"Search done!\", \"success\"));\n        }}\n      >\n        <Form>\n          <label htmlFor=\"search\">\n            Search for a restaurant from Open Street Map data\n          </label>\n          <br />\n          <Field\n            component={TextField}\n            className={classes.textField}\n            label=\"Restaurant name\"\n            name=\"search\"\n            type=\"text\"\n          />\n          <br />\n          <Button color=\"primary\" type=\"submit\">\n            Search\n          </Button>\n        </Form>\n      </Formik>\n      <SearchResults\n        searchResults={searchResults}\n        fillFormWithData={fillFormWithData}\n      />\n\n      <Typography variant=\"h6\">Add manually</Typography>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialFormValues}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .max(40, \"Must be 40 characters or less\")\n            .required(\"Required\"),\n          website: Yup.string().url(\"Must be a valid url\"),\n          latlon: Yup.string().required(\"Required\"),\n        })}\n        onSubmit={async (values, { resetForm }) => {\n          const params = {\n            name: values.name,\n            subtitle: values.subtitle,\n            website: values.website,\n            latlon: `(${values.latlon})`,\n          };\n          await axios.post(\"/restaurants\", params);\n          dispatch(\n            showNotification(\n              `Restaurant ${values.name} added to the database!`,\n              \"success\"\n            )\n          );\n          resetForm();\n        }}\n      >\n        {(props) => (\n          <Form>\n            <Field\n              component={TextField}\n              className={classes.textField}\n              label=\"Name\"\n              name=\"name\"\n              type=\"text\"\n            />\n            <br />\n\n            <Field\n              component={TextField}\n              className={classes.textField}\n              label=\"Specifier\"\n              name=\"subtitle\"\n              type=\"text\"\n            />\n            <br />\n\n            <Field\n              component={TextField}\n              className={classes.textField}\n              label=\"Website\"\n              name=\"website\"\n              type=\"text\"\n            />\n            <br />\n\n            <Field\n              component={TextField}\n              className={classes.textField}\n              label=\"Coordinates lat, lng\"\n              name=\"latlon\"\n              type=\"text\"\n            />\n            <br />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disableElevation\n              disabled={!props.isValid}\n            >\n              Add restaurant\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default RestaurantForm;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport { hideNotification } from \"../../redux/notification\";\nimport { useDispatch } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\n\ntype AlertProps = {\n  onClose: (event: React.SyntheticEvent<Element, Event>) => void;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n  children: string;\n};\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Notification = () => {\n  const notification = useSelector((state: RootState) => state.notification);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleClose = (_event: React.SyntheticEvent<Element, Event>) => {\n    dispatch(hideNotification());\n  };\n\n  return (\n    <div id=\"notificationContainer\" className={classes.root}>\n      <Snackbar\n        open={notification.open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <Alert onClose={handleClose} severity={notification.notificationType}>\n          {notification.msg}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Notification;\n","import { showNotification } from \"./notification\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"./store\";\nimport { Action } from \"redux\";\nimport {\n  FETCH_LOCATION_REQUEST,\n  FETCH_LOCATION_SUCCESS,\n  FETCH_LOCATION_FAILURE,\n  LocationActionTypes,\n  LocationState,\n  FetchLocationSuccessAction,\n} from \"./locationTypes\";\n\nconst initialState: LocationState = {\n  coordinates: { lat: 60.16592, lng: 24.94801 },\n  isLocating: false,\n  didInvalidate: false,\n  error: false,\n};\n\nexport const locationReducer = (\n  state = initialState,\n  action: LocationActionTypes\n): LocationState => {\n  switch (action.type) {\n    case FETCH_LOCATION_REQUEST:\n      return {\n        ...state,\n        isLocating: true,\n        didInvalidate: false,\n        error: false,\n      };\n    case FETCH_LOCATION_SUCCESS:\n      return {\n        ...state,\n        isLocating: false,\n        didInvalidate: false,\n        error: false,\n        coordinates: action.coords,\n      };\n    case FETCH_LOCATION_FAILURE:\n      return {\n        ...state,\n        isLocating: false,\n        didInvalidate: false,\n        error: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst setLocation = (position: Position): FetchLocationSuccessAction => {\n  return {\n    type: FETCH_LOCATION_SUCCESS,\n    coords: {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    },\n  };\n};\n\nconst getPositionPromise = (): Promise<Position> => {\n  const options = {\n    enableHighAccuracy: false,\n    maximumAge: 30000,\n    timeout: 5000,\n  };\n  return new Promise<Position>((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  });\n};\n\nexport const locateUser = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> => async (dispatch) => {\n  dispatch({ type: FETCH_LOCATION_REQUEST });\n  try {\n    if (!navigator.geolocation) {\n      dispatch(\n        showNotification(\n          \"Geolocation is not supported by your browser\",\n          \"warning\"\n        )\n      );\n      throw new Error(\"Geolocation not supported\");\n    }\n    const position = await getPositionPromise();\n    if (position.coords.accuracy > 1000) {\n      dispatch(\n        showNotification(\n          \"Couldn't get an accurate location. Maybe try with a different browser.\",\n          \"warning\"\n        )\n      );\n      throw new Error(\"Poor accuracy for location\");\n    } else {\n      dispatch(setLocation(position));\n    }\n    return position;\n  } catch (err) {\n    dispatch({ type: FETCH_LOCATION_FAILURE });\n    if (err.code === 2) {\n      dispatch(showNotification(\"Couldn't get location.\", \"warning\"));\n      throw new Error(\"Location unavailable\");\n    }\n    throw err;\n  }\n};\n","export const FETCH_LOCATION_REQUEST = \"[location] Fetch request\";\nexport const FETCH_LOCATION_SUCCESS = \"[location] Fetch success\";\nexport const FETCH_LOCATION_FAILURE = \"[location] Fetch failure\";\n\nexport interface Coordinates {\n  lat: number;\n  lng: number;\n}\n\nexport interface LocationState {\n  coordinates: Coordinates;\n  isLocating: boolean;\n  didInvalidate: boolean;\n  error: boolean | string;\n}\n\ninterface FetchLocationRequestAction {\n  type: typeof FETCH_LOCATION_REQUEST;\n}\n\nexport interface FetchLocationSuccessAction {\n  type: typeof FETCH_LOCATION_SUCCESS;\n  coords: Coordinates;\n}\n\ninterface FetchLocationFailureAction {\n  type: typeof FETCH_LOCATION_FAILURE;\n}\n\nexport type LocationActionTypes =\n  | FetchLocationRequestAction\n  | FetchLocationSuccessAction\n  | FetchLocationFailureAction;\n","export const FETCH_RESTAURANTS_REQUEST = \"[restaurants] Fetch request\";\nexport const FETCH_RESTAURANTS_SUCCESS = \"[restaurants] Fetch success\";\nexport const FETCH_RESTAURANTS_FAILURE = \"[restaurants] Fetch failure\";\nexport const ADD_DISTANCES = \"[restaurants] Distances added\";\nexport const INVALIDATE_RESTAURANTS = \"[restaurants] Invalidate data\";\nexport const SET_RESTAURANT_SUGGESTIONS = \"[restaurants] Set suggestions\";\n\nexport interface Restaurant {\n  id: string;\n  name: string;\n  website: string | null;\n  latlon: {\n    x: number;\n    y: number;\n  };\n  subtitle: string | null;\n  distance: number;\n}\n\nexport interface RestaurantState {\n  allRestaurants: Restaurant[];\n  isFetching: boolean;\n  isWithDistance: boolean;\n  didInvalidate: boolean;\n  restaurantSuggestions: Restaurant[];\n}\n\ninterface FetchRestaurantsRequestAction {\n  type: typeof FETCH_RESTAURANTS_REQUEST;\n}\n\ninterface FetchRestaurantsSuccessAction {\n  type: typeof FETCH_RESTAURANTS_SUCCESS;\n  payload: Restaurant[];\n}\n\ninterface FetchRestaurantsFailureAction {\n  type: typeof FETCH_RESTAURANTS_FAILURE;\n  payload: string;\n}\n\ninterface AddDistancesAction {\n  type: typeof ADD_DISTANCES;\n  payload: Restaurant[];\n}\n\ninterface InvalidateRestaurantsAction {\n  type: typeof INVALIDATE_RESTAURANTS;\n}\n\ninterface SetRestaurantSuggestionsAction {\n  type: typeof SET_RESTAURANT_SUGGESTIONS;\n  payload: Restaurant[];\n}\n\nexport type RestaurantActionTypes =\n  | FetchRestaurantsRequestAction\n  | FetchRestaurantsSuccessAction\n  | FetchRestaurantsFailureAction\n  | AddDistancesAction\n  | InvalidateRestaurantsAction\n  | SetRestaurantSuggestionsAction;\n","import axios from \"axios\";\nimport { showNotification } from \"./notification\";\nimport { calculateDistanceBetweenPoints, shuffleArray } from \"./utils\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"./store\";\nimport { Action } from \"redux\";\nimport {\n  FETCH_RESTAURANTS_FAILURE,\n  FETCH_RESTAURANTS_REQUEST,\n  FETCH_RESTAURANTS_SUCCESS,\n  ADD_DISTANCES,\n  INVALIDATE_RESTAURANTS,\n  SET_RESTAURANT_SUGGESTIONS,\n  Restaurant,\n  RestaurantState,\n  RestaurantActionTypes,\n} from \"./restaurantTypes\";\n\nconst initialState: RestaurantState = {\n  allRestaurants: [],\n  isFetching: false,\n  isWithDistance: false,\n  didInvalidate: false,\n  restaurantSuggestions: [],\n};\n\nexport const restaurantReducer = (\n  state = initialState,\n  action: RestaurantActionTypes\n): RestaurantState => {\n  switch (action.type) {\n    case FETCH_RESTAURANTS_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isWithDistance: false,\n        didInvalidate: false,\n      };\n    case FETCH_RESTAURANTS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        isWithDistance: false,\n        didInvalidate: false,\n        allRestaurants: action.payload,\n      };\n    case FETCH_RESTAURANTS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        isWithDistance: false,\n        didInvalidate: false,\n      };\n    case ADD_DISTANCES:\n      return {\n        ...state,\n        isFetching: false,\n        isWithDistance: true,\n        didInvalidate: false,\n        allRestaurants: action.payload,\n      };\n    case INVALIDATE_RESTAURANTS:\n      return {\n        ...state,\n        didInvalidate: true,\n      };\n    case SET_RESTAURANT_SUGGESTIONS:\n      return {\n        ...state,\n        restaurantSuggestions: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const fetchRestaurants = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> => async (dispatch) => {\n  dispatch({ type: FETCH_RESTAURANTS_REQUEST });\n\n  try {\n    const response = await axios.get(\"/restaurants\");\n    response.data.forEach((element: Restaurant) => {\n      element.distance = 0;\n    });\n    dispatch({ type: FETCH_RESTAURANTS_SUCCESS, payload: response.data });\n    return response;\n  } catch (err) {\n    dispatch({\n      type: FETCH_RESTAURANTS_FAILURE,\n      payload: \"Couldn't fetch restaurants\",\n    });\n  }\n};\n\nexport const addDistanceToRestaurants = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> => (dispatch, getState) => {\n  const { restaurants, location } = getState();\n  const restaurantsWithDistances = restaurants.allRestaurants.map(\n    (r: Restaurant) => {\n      r.distance = calculateDistanceBetweenPoints(\n        location.coordinates.lat,\n        location.coordinates.lng,\n        r.latlon.x,\n        r.latlon.y\n      );\n      return r;\n    }\n  );\n  dispatch({\n    type: ADD_DISTANCES,\n    payload: restaurantsWithDistances,\n  });\n};\n\nexport const filterRestaurantsByDistance = (\n  restaurants: Restaurant[],\n  distance: number\n): Restaurant[] => {\n  return restaurants.filter((r) => r.distance < distance);\n};\n\nexport const setRestaurantSuggestions = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> => (dispatch, getState) => {\n  const { restaurants } = getState();\n\n  let restaurantSuggestions = [];\n\n  // Distance cutoff\n  restaurantSuggestions = filterRestaurantsByDistance(\n    restaurants.allRestaurants,\n    750\n  );\n\n  // Randomize\n  restaurantSuggestions = shuffleArray(restaurantSuggestions);\n\n  // Pick three\n  restaurantSuggestions = restaurantSuggestions.splice(0, 3);\n  if (restaurantSuggestions.length === 0) {\n    dispatch(\n      showNotification(\"No restaurants found near your location.\", \"warning\")\n    );\n  }\n  dispatch({\n    type: SET_RESTAURANT_SUGGESTIONS,\n    payload: restaurantSuggestions,\n  });\n};\n","import React, { useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RestaurantSuggestions from \"./components/showRestaurants/RestaurantSuggestions\";\nimport Header from \"./components/Header\";\nimport { Container, Box } from \"@material-ui/core\";\nimport RestaurantForm from \"./components/addRestaurant/RestaurantForm\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Notification from \"./components/Notification\";\nimport { initData } from \"../redux\";\nimport { useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"24px\",\n  },\n});\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(initData());\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Router>\n            <Header />\n            <Notification />\n            <Switch>\n              <Route path=\"/addRestaurant\">\n                <RestaurantForm />\n              </Route>\n              <Route path=\"/\">\n                <RestaurantSuggestions />\n              </Route>\n            </Switch>\n          </Router>\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import { locateUser } from \"./location\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"./store\";\nimport { Action } from \"redux\";\nimport {\n  fetchRestaurants,\n  setRestaurantSuggestions,\n  addDistanceToRestaurants,\n} from \"./restaurant\";\n\nexport const initData = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> => {\n  return async (dispatch) => {\n    try {\n      await Promise.all([dispatch(locateUser()), dispatch(fetchRestaurants())]);\n      dispatch(addDistanceToRestaurants());\n      dispatch(setRestaurantSuggestions());\n    } catch (err) {\n      console.error(\"Error initializing data: \", err.message);\n    }\n  };\n};\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { notificationReducer } from \"./notification\";\nimport { restaurantReducer } from \"./restaurant\";\nimport { locationReducer } from \"./location\";\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n  notification: notificationReducer,\n  restaurants: restaurantReducer,\n  location: locationReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./view/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"fontsource-roboto/latin-300-normal.css\";\nimport \"fontsource-roboto/latin-400-normal.css\";\nimport \"fontsource-roboto/latin-500-normal.css\";\nimport \"fontsource-roboto/latin-700-normal.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}