{"version":3,"sources":["components/showRestaurants/RestaurantDetails.jsx","utils.js","components/showRestaurants/RestaurantMap.jsx","components/showRestaurants/RestaurantSuggestions.jsx","components/Header.jsx","components/addRestaurant/SearchResultDetails.jsx","components/addRestaurant/SearchResults.jsx","components/addRestaurant/RestaurantForm.jsx","components/Notification.jsx","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","margin","media","height","bullet","display","RestaurantDetails","restaurant","classes","bull","className","Card","CardContent","Typography","gutterBottom","variant","component","name","color","CardActions","Button","size","Link","href","website","deg2rad","deg","Math","PI","locateUser","setUserLocation","setNotification","navigator","geolocation","getCurrentPosition","position","coordinates","lat","coords","latitude","lon","longitude","message","type","console","log","calculateBoundingBoxAroundLocation","userLocation","x1","y1","x2","y2","RestaurantMap","restaurantSuggestions","Fragment","Box","id","flex","padding","Map","bounds","northBound","reduce","max","cur","latlon","x","westBound","min","y","southBound","calculateBoundingBox","boundsOptions","scrollWheelZoom","style","width","TileLayer","url","process","attribution","Circle","center","radius","Popup","map","r","Marker","key","Tooltip","permanent","RestaurantSuggestions","restaurants","setRestaurants","useState","isWithDistance","setIsWithDistance","setRestaurantSuggestions","useEffect","distance","restaurantsWithDistances","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","toFixed","calculateDistanceBetweenPoints","addDistanceToRestaurants","array","number","suffledArray","temporaryValue","randomIndex","currentIndex","length","floor","random","shuffle","splice","limitToRandomSuggestions","filter","flexDirection","flexWrap","Header","align","SearchResultDetails","searchResult","fillFormWithData","address","amenity","extratags","onClick","SearchResults","searchResults","justifyContent","place_id","RestaurantForm","setSearchResults","fetchSearchResults","searchQuery","fetch","response","json","data","alert","formikSearchForm","useFormik","initialValues","search","onSubmit","values","JSON","stringify","formikAddRestaurant","subtitle","params","axios","post","res","handleSubmit","htmlFor","onChange","handleChange","value","setFieldValue","Notification","notification","CircularProgress","App","get","initRestaurants","CssBaseline","Container","alignItems","to","textDecoration","disableElevation","marginBottom","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8058fdb.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Link,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n    margin: \"8px 16px\",\n  },\n  media: {\n    height: 140,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 4px\",\n  },\n});\n\nconst RestaurantDetails = ({ restaurant }) => {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {restaurant.name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Takeaway{bull}Big groups{bull}Fast service{bull}Buffet\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          <Link href={restaurant.website}>Website</Link>\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default RestaurantDetails;\n","export const calculateDistanceBetweenPoints = (lat1, lon1, lat2, lon2) => {\n  var earthRadius = 6371;\n  var dLat = deg2rad(lat2 - lat1);\n  var dLon = deg2rad(lon2 - lon1);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var distance = (earthRadius * c).toFixed(2);\n  return distance;\n};\n\nconst deg2rad = (deg) => {\n  return deg * (Math.PI / 180);\n};\n\nexport const locateUser = (setUserLocation, setNotification) => {\n  function success(position) {\n    const coordinates = {\n      lat: position.coords.latitude,\n      lon: position.coords.longitude,\n    };\n\n    setNotification({ message: null, type: null });\n    console.log(\"User location: \", coordinates);\n    setUserLocation(coordinates);\n  }\n\n  function error() {\n    setNotification({\n      message: \"Location is needed to show the restaurant suggestions.\",\n      type: \"error\",\n    });\n  }\n\n  if (!navigator.geolocation) {\n    setNotification({\n      message: \"Geolocation is not supported by your browser\",\n      type: \"error\",\n    });\n  } else {\n    navigator.geolocation.getCurrentPosition(success, error);\n    setNotification({ message: \"Locating...\", type: \"spinner\" });\n  }\n};\n\nexport const calculateBoundingBoxAroundLocation = (userLocation) => {\n  // Roughly 50 km difference to the original location for each variable\n  let x1 = userLocation.lon - 0.45;\n  let y1 = userLocation.lat - 0.45;\n  let x2 = userLocation.lon + 0.45;\n  let y2 = userLocation.lat + 0.45;\n\n  return { x1, y1, x2, y2 };\n};\n","import React from \"react\";\nimport { Map, TileLayer, Marker, Popup, Tooltip, Circle } from \"react-leaflet\";\nimport { Link, Typography, Box } from \"@material-ui/core\";\n\nconst RestaurantMap = ({ userLocation, restaurantSuggestions }) => {\n  const calculateBoundingBox = (restaurantSuggestions, userLocation) => {\n    const northBound = restaurantSuggestions.reduce(\n      (max, cur) => Math.max(max, cur.latlon.x),\n      userLocation.lat\n    );\n\n    const westBound = restaurantSuggestions.reduce(\n      (min, cur) => Math.min(min, cur.latlon.y),\n      userLocation.lon\n    );\n\n    const southBound = restaurantSuggestions.reduce(\n      (min, cur) => Math.min(min, cur.latlon.x),\n      userLocation.lat\n    );\n\n    const eastBound = restaurantSuggestions.reduce(\n      (max, cur) => Math.max(max, cur.latlon.y),\n      userLocation.lon\n    );\n\n    return [\n      [northBound, eastBound],\n      [southBound, westBound],\n    ];\n  };\n\n  return (\n    <React.Fragment>\n      <Box\n        id=\"map\"\n        flex=\"1\"\n        padding=\"8px\"\n        // style={{ border: \"3px dashed olive\" }}\n      >\n        <Map\n          bounds={calculateBoundingBox(restaurantSuggestions, userLocation)}\n          boundsOptions={{ padding: [35, 35] }}\n          scrollWheelZoom={false}\n          style={{ width: \"100%\", height: \"100%\" }}\n        >\n          <TileLayer\n            url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}?access_token=${process.env.REACT_APP_MAPBOX}`}\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a>, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, &copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n          />\n          {userLocation && (\n            <Circle center={userLocation} radius={15}>\n              <Popup>\n                <Typography variant=\"subtitle1\">Your location</Typography>\n              </Popup>\n            </Circle>\n          )}\n          {restaurantSuggestions &&\n            restaurantSuggestions.map((r) => (\n              <Marker key={r.id} position={[r.latlon.x, r.latlon.y]}>\n                <Tooltip permanent>{r.name}</Tooltip>\n                <Popup>\n                  <Typography variant=\"h6\">{r.name}</Typography>\n                  <Link href={r.website}>{r.website}</Link>\n                </Popup>\n              </Marker>\n            ))}\n        </Map>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default RestaurantMap;\n","import React, { useEffect, useState } from \"react\";\nimport RestaurantDetails from \"./RestaurantDetails\";\nimport { calculateDistanceBetweenPoints } from \"../../utils\";\nimport { Box } from \"@material-ui/core\";\nimport RestaurantMap from \"./RestaurantMap\";\n\nconst RestaurantSuggestions = ({\n  restaurants,\n  setRestaurants,\n  userLocation,\n}) => {\n  const [isWithDistance, setIsWithDistance] = useState(false);\n  const [restaurantSuggestions, setRestaurantSuggestions] = useState(null);\n\n  useEffect(() => {\n    const addDistanceToRestaurants = () => {\n      const restaurantsWithDistances = restaurants.map((r) => {\n        r.distance = calculateDistanceBetweenPoints(\n          userLocation.lat,\n          userLocation.lon,\n          r.latlon.x,\n          r.latlon.y\n        );\n        return r;\n      });\n\n      setRestaurants(restaurantsWithDistances);\n      setIsWithDistance(true);\n    };\n\n    const filterByDistance = (distance) => {\n      const filteredRestaurants = restaurants.filter(\n        (r) => r.distance < distance / 1000\n      );\n      return filteredRestaurants;\n    };\n\n    const limitToRandomSuggestions = (array, number) => {\n      const suffledArray = shuffle(array);\n      setRestaurantSuggestions(suffledArray.splice(0, number));\n    };\n\n    function shuffle(array) {\n      var currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n\n    if (userLocation && !isWithDistance) {\n      addDistanceToRestaurants();\n      const filteredRestaurants = filterByDistance(700);\n      limitToRandomSuggestions(filteredRestaurants, 3);\n    }\n  }, [restaurants, setRestaurants, userLocation, isWithDistance]);\n\n  return (\n    <>\n      {restaurantSuggestions && (\n        <Box\n          id=\"restaurant-suggestions\"\n          display=\"flex\"\n          flex=\"1 0 auto\"\n          flexDirection=\"row\"\n          flexWrap=\"wrap\"\n          // style={{ border: \"2px solid blue\" }}\n        >\n          <Box display=\"flex\" flexDirection=\"column\">\n            {restaurantSuggestions.map((r) => (\n              <Box key={r.id}>\n                <RestaurantDetails restaurant={r} />\n              </Box>\n            ))}\n          </Box>\n          <RestaurantMap\n            userLocation={userLocation}\n            restaurantSuggestions={restaurantSuggestions}\n          />\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default RestaurantSuggestions;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Header = () => {\n  return (\n    <div>\n      <Typography id=\"page-header\" variant=\"h4\" align=\"center\" gutterBottom>\n        Lunch Near Me\n      </Typography>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Card, CardContent, Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"8px 16px\",\n  },\n});\n\nconst SearchResultDetails = ({ searchResult, fillFormWithData }) => {\n  const classes = useStyles();\n\n  const name = searchResult.address.amenity;\n  const subtitle = \"\";\n  const website = searchResult.extratags.website;\n  const latlon = `${searchResult.lat},${searchResult.lon}`;\n  // const addressLine1 = [\n  //   searchResult.address.road,\n  //   \" \",\n  //   searchResult.address.house_number,\n  // ].join(\"\");\n\n  // const addressLine2 = [\n  //   searchResult.address.postcode,\n  //   \" \",\n  //   searchResult.address.city || searchResult.address.town,\n  //   \", \",\n  //   searchResult.address.country,\n  // ].join(\"\");\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\">{name}</Typography>\n        <Link href={website}>{website}</Link>\n        {/* <Typography variant=\"body1\">\n          {addressLine1}\n          <br />\n          {addressLine2}\n        </Typography> */}\n        <br />\n        <Button\n          color=\"primary\"\n          onClick={() => fillFormWithData(name, subtitle, website, latlon)}\n        >\n          Fill the data\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SearchResultDetails;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport SearchResultDetails from \"./SearchResultDetails\";\n\nconst SearchResults = ({ searchResults, fillFormWithData }) => {\n  return (\n    <Box\n      id=\"search-results\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n    >\n      {searchResults.map((r) => (\n        <SearchResultDetails\n          key={r.place_id}\n          searchResult={r}\n          fillFormWithData={fillFormWithData}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default SearchResults;\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport SearchResults from \"./SearchResults\";\nimport { calculateBoundingBoxAroundLocation } from \"../../utils\";\nimport axios from \"axios\";\n\nconst RestaurantForm = ({ userLocation }) => {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const fetchSearchResults = async (searchQuery) => {\n    const { x1, y1, x2, y2 } = calculateBoundingBoxAroundLocation(userLocation);\n    console.log(\"Bounding box: \", x1, y1, x2, y2);\n\n    let response = await fetch(\n      `https://nominatim.openstreetmap.org/?addressdetails=1&q=${searchQuery}&format=json&limit=5&viewbox=${x1},${y1},${x2},${y2}&extratags=1&bounded=1`\n    );\n    let data = await response.json();\n    if (data.length) {\n      console.log(data);\n      setSearchResults(data);\n    } else {\n      alert(\"No search results found\");\n    }\n  };\n\n  const fillFormWithData = (name, subtitle, website, latlon) => {\n    formikAddRestaurant.setFieldValue(\"name\", name);\n    formikAddRestaurant.setFieldValue(\"subtitle\", subtitle);\n    formikAddRestaurant.setFieldValue(\"website\", website);\n    formikAddRestaurant.setFieldValue(\"latlon\", latlon);\n  };\n\n  const formikSearchForm = useFormik({\n    initialValues: {\n      search: \"\",\n    },\n    onSubmit: (values) => {\n      fetchSearchResults(JSON.stringify(values.search));\n    },\n  });\n\n  const formikAddRestaurant = useFormik({\n    initialValues: {\n      name: \"\",\n      subtitle: \"\",\n      website: \"\",\n      latlon: \"\",\n    },\n    onSubmit: async (values) => {\n      const params = {\n        name: values.name,\n        subtitle: values.subtitle,\n        website: values.website,\n        latlon: `(${values.latlon})`,\n      };\n      const res = await axios.post(\"/restaurants\", params);\n      console.log(\"res.data: \", res.data);\n    },\n  });\n\n  return (\n    <Box>\n      <Typography variant=\"h5\">Add a new restaurant</Typography>\n      <form onSubmit={formikSearchForm.handleSubmit}>\n        <label htmlFor=\"search\">Search for a restaurant to add</label>\n        <input\n          id=\"search\"\n          name=\"search\"\n          type=\"text\"\n          onChange={formikSearchForm.handleChange}\n          value={formikSearchForm.values.search}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <SearchResults\n        searchResults={searchResults}\n        fillFormWithData={fillFormWithData}\n      />\n\n      <Typography variant=\"h6\">Add manually</Typography>\n      <form onSubmit={formikAddRestaurant.handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.name}\n        />\n        <br />\n        <label htmlFor=\"subtitle\">Specifier</label>\n        <input\n          id=\"subtitle\"\n          name=\"subtitle\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.subtitle}\n        />\n        <br />\n        <label htmlFor=\"website\">Website</label>\n        <input\n          id=\"website\"\n          name=\"website\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.website}\n        />\n        <br />\n        <label htmlFor=\"latlon\">Coordinates lat, lon</label>\n        <input\n          id=\"latlon\"\n          name=\"latlon\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.latlon}\n        />\n        <br />\n        <button type=\"submit\">Add to database</button>\n      </form>\n    </Box>\n  );\n};\n\nexport default RestaurantForm;\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n\n  if (notification.type === \"spinner\") {\n    return (\n      <div>\n        {notification.message}\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  return <div>{notification.message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport RestaurantSuggestions from \"./components/showRestaurants/RestaurantSuggestions\";\nimport Header from \"./components/Header\";\nimport { Button, Container, Box } from \"@material-ui/core\";\nimport RestaurantForm from \"./components/addRestaurant/RestaurantForm\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { locateUser } from \"./utils\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [restaurants, setRestaurants] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    const initRestaurants = async () => {\n      const response = await axios.get(\"/restaurants\");\n      setRestaurants(response.data);\n    };\n\n    initRestaurants();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\" style={{ padding: \"24px\" }}>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          // alignItems=\"center\"\n          // style={{ border: \"1px solid cyan\" }}\n        >\n          <Router>\n            <Header />\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              style={{\n                // border: \"1px solid olive\",\n                padding: \"10px\",\n                margin: \"10px\",\n              }}\n            >\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n                <Button\n                  id=\"locate-button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disableElevation\n                  type=\"button\"\n                  onClick={() => locateUser(setUserLocation, setNotification)}\n                  style={{ marginBottom: \"10px\" }}\n                >\n                  Show me my options\n                </Button>\n              </Link>\n              <Link to=\"/addRestaurant\" style={{ textDecoration: \"none\" }}>\n                <Button\n                  id=\"add-restaurant-button\"\n                  color=\"secondary\"\n                  onClick={() => locateUser(setUserLocation, setNotification)}\n                >\n                  Add a new restaurant\n                </Button>\n              </Link>\n            </Box>\n            <Switch>\n              <Route path=\"/addRestaurant\">\n                <RestaurantForm userLocation={userLocation} />\n              </Route>\n              <Route path=\"/\">\n                <Notification notification={notification} />\n                {userLocation && (\n                  <RestaurantSuggestions\n                    restaurants={restaurants}\n                    setRestaurants={setRestaurants}\n                    userLocation={userLocation}\n                  />\n                )}\n              </Route>\n            </Switch>\n          </Router>\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"fontsource-roboto/latin-300-normal.css\";\nimport \"fontsource-roboto/latin-400-normal.css\";\nimport \"fontsource-roboto/latin-500-normal.css\";\nimport \"fontsource-roboto/latin-700-normal.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}