{"version":3,"sources":["components/showRestaurants/RestaurantDetails.jsx","utils.js","components/showRestaurants/RestaurantMap.jsx","components/showRestaurants/RestaurantSuggestions.jsx","components/Header.jsx","components/addRestaurant/SearchResultDetails.jsx","components/addRestaurant/SearchResults.jsx","components/addRestaurant/RestaurantForm.jsx","components/Notification.jsx","App.js","index.js"],"names":["useStyles","makeStyles","root","margin","RestaurantDetails","restaurant","classes","Card","className","CardContent","Typography","variant","name","subtitle","Link","href","website","distance","deg2rad","deg","Math","PI","locateUser","setUserLocation","setNotification","navigator","geolocation","getCurrentPosition","position","coordinates","lat","coords","latitude","lon","longitude","message","type","console","log","calculateBoundingBoxAroundLocation","userLocation","x1","y1","x2","y2","RestaurantMap","restaurantSuggestions","Fragment","Box","id","flex","Map","bounds","northBound","reduce","max","cur","latlon","x","westBound","min","y","southBound","calculateBoundingBox","boundsOptions","padding","scrollWheelZoom","style","width","height","TileLayer","url","process","attribution","Circle","center","radius","Popup","map","r","Marker","key","Tooltip","permanent","RestaurantSuggestions","restaurants","setRestaurants","useState","isWithDistance","setIsWithDistance","setRestaurantSuggestions","useEffect","restaurantsWithDistances","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","toFixed","calculateDistanceBetweenPoints","addDistanceToRestaurants","array","number","suffledArray","temporaryValue","randomIndex","currentIndex","length","floor","random","shuffle","splice","limitToRandomSuggestions","filter","display","flexDirection","justifyContent","border","Header","align","gutterBottom","SearchResultDetails","searchResult","fillFormWithData","address","amenity","extratags","Button","color","onClick","SearchResults","searchResults","place_id","RestaurantForm","setSearchResults","fetchSearchResults","searchQuery","fetch","response","json","data","alert","formikSearchForm","useFormik","initialValues","search","onSubmit","values","JSON","stringify","formikAddRestaurant","params","axios","post","res","handleSubmit","htmlFor","onChange","handleChange","value","setFieldValue","Notification","notification","CircularProgress","App","get","initRestaurants","CssBaseline","Container","maxWidth","to","textDecoration","disableElevation","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.254baa41.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Card, CardContent, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"8px 16px\",\n  },\n});\n\nconst RestaurantDetails = ({ restaurant }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\">{restaurant.name}</Typography>\n        <Typography variant=\"subtitle2\">{restaurant.subtitle}</Typography>\n        <Link href={restaurant.website}>{restaurant.website}</Link>\n        {restaurant.distance && (\n          <p>{restaurant.distance}&nbsp;km from your position</p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RestaurantDetails;\n","export const calculateDistanceBetweenPoints = (lat1, lon1, lat2, lon2) => {\n  var earthRadius = 6371;\n  var dLat = deg2rad(lat2 - lat1);\n  var dLon = deg2rad(lon2 - lon1);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var distance = (earthRadius * c).toFixed(2);\n  return distance;\n};\n\nconst deg2rad = (deg) => {\n  return deg * (Math.PI / 180);\n};\n\nexport const locateUser = (setUserLocation, setNotification) => {\n  function success(position) {\n    const coordinates = {\n      lat: position.coords.latitude,\n      lon: position.coords.longitude,\n    };\n\n    setNotification({ message: null, type: null });\n    console.log(\"User location: \", coordinates);\n    setUserLocation(coordinates);\n  }\n\n  function error() {\n    setNotification({\n      message: \"Location is needed to show the restaurant suggestions.\",\n      type: \"error\",\n    });\n  }\n\n  if (!navigator.geolocation) {\n    setNotification({\n      message: \"Geolocation is not supported by your browser\",\n      type: \"error\",\n    });\n  } else {\n    navigator.geolocation.getCurrentPosition(success, error);\n    setNotification({ message: \"Locating...\", type: \"spinner\" });\n  }\n};\n\nexport const calculateBoundingBoxAroundLocation = (userLocation) => {\n  // Roughly 50 km difference to the original location for each variable\n  let x1 = userLocation.lon - 0.45;\n  let y1 = userLocation.lat - 0.45;\n  let x2 = userLocation.lon + 0.45;\n  let y2 = userLocation.lat + 0.45;\n\n  return { x1, y1, x2, y2 };\n};\n","import React from \"react\";\nimport { Map, TileLayer, Marker, Popup, Tooltip, Circle } from \"react-leaflet\";\nimport { Link, Typography, Box } from \"@material-ui/core\";\n\nconst RestaurantMap = ({ userLocation, restaurantSuggestions }) => {\n  const calculateBoundingBox = (restaurantSuggestions, userLocation) => {\n    console.log(\"restaurantSuggestions: \", restaurantSuggestions);\n\n    const northBound = restaurantSuggestions.reduce(\n      (max, cur) => Math.max(max, cur.latlon.x),\n      userLocation.lat\n    );\n\n    const westBound = restaurantSuggestions.reduce(\n      (min, cur) => Math.min(min, cur.latlon.y),\n      userLocation.lon\n    );\n\n    const southBound = restaurantSuggestions.reduce(\n      (min, cur) => Math.min(min, cur.latlon.x),\n      userLocation.lat\n    );\n\n    const eastBound = restaurantSuggestions.reduce(\n      (max, cur) => Math.max(max, cur.latlon.y),\n      userLocation.lon\n    );\n\n    return [\n      [northBound, eastBound],\n      [southBound, westBound],\n    ];\n  };\n\n  return (\n    <React.Fragment>\n      <Box id=\"map\" flex=\"1\" margin=\"20px\">\n        <Map\n          bounds={calculateBoundingBox(restaurantSuggestions, userLocation)}\n          boundsOptions={{ padding: [35, 35] }}\n          scrollWheelZoom={false}\n          style={{ width: \"100%\", height: \"500px\" }}\n        >\n          <TileLayer\n            url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}?access_token=${process.env.REACT_APP_MAPBOX}`}\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a>, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, &copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n          />\n          {userLocation && (\n            <Circle center={userLocation} radius={15}>\n              <Popup>\n                <Typography variant=\"subtitle1\">Your location</Typography>\n              </Popup>\n            </Circle>\n          )}\n          {restaurantSuggestions &&\n            restaurantSuggestions.map((r) => (\n              <Marker key={r.id} position={[r.latlon.x, r.latlon.y]}>\n                <Tooltip permanent>{r.name}</Tooltip>\n                <Popup>\n                  <Typography variant=\"h6\">{r.name}</Typography>\n                  <Link href={r.website}>{r.website}</Link>\n                </Popup>\n              </Marker>\n            ))}\n        </Map>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default RestaurantMap;\n","import React, { useEffect, useState } from \"react\";\nimport RestaurantDetails from \"./RestaurantDetails\";\nimport { calculateDistanceBetweenPoints } from \"../../utils\";\nimport { Box } from \"@material-ui/core\";\nimport RestaurantMap from \"./RestaurantMap\";\n\nconst RestaurantSuggestions = ({\n  restaurants,\n  setRestaurants,\n  userLocation,\n}) => {\n  const [isWithDistance, setIsWithDistance] = useState(false);\n  const [restaurantSuggestions, setRestaurantSuggestions] = useState(null);\n\n  useEffect(() => {\n    const addDistanceToRestaurants = () => {\n      const restaurantsWithDistances = restaurants.map((r) => {\n        r.distance = calculateDistanceBetweenPoints(\n          userLocation.lat,\n          userLocation.lon,\n          r.latlon.x,\n          r.latlon.y\n        );\n        return r;\n      });\n\n      setRestaurants(restaurantsWithDistances);\n      setIsWithDistance(true);\n    };\n\n    const filterByDistance = (distance) => {\n      const filteredRestaurants = restaurants.filter(\n        (r) => r.distance < distance / 1000\n      );\n      return filteredRestaurants;\n    };\n\n    const limitToRandomSuggestions = (array, number) => {\n      const suffledArray = shuffle(array);\n      setRestaurantSuggestions(suffledArray.splice(0, number));\n    };\n\n    function shuffle(array) {\n      var currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n\n    if (userLocation && !isWithDistance) {\n      addDistanceToRestaurants();\n      const filteredRestaurants = filterByDistance(700);\n      limitToRandomSuggestions(filteredRestaurants, 3);\n    }\n  }, [restaurants, setRestaurants, userLocation, isWithDistance]);\n\n  return (\n    <>\n      {restaurantSuggestions && (\n        <Box\n          id=\"restaurant-suggestions\"\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"flex-start\"\n          style={{ border: \"1px solid blue\" }}\n        >\n          <Box display=\"flex\" flexDirection=\"column\">\n            {restaurantSuggestions.map((r) => (\n              <Box key={r.id}>\n                <RestaurantDetails restaurant={r} />\n              </Box>\n            ))}\n          </Box>\n          <RestaurantMap\n            userLocation={userLocation}\n            restaurantSuggestions={restaurantSuggestions}\n          />\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default RestaurantSuggestions;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Header = () => {\n  return (\n    <div>\n      <Typography id=\"page-header\" variant=\"h4\" align=\"center\" gutterBottom>\n        Local Lunch\n      </Typography>\n      <Typography id=\"subtitle\" variant=\"subtitle1\" align=\"center\" gutterBottom>\n        Here's the help you need to choose where to go for lunch today.\n      </Typography>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Card, CardContent, Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"8px 16px\",\n  },\n});\n\nconst SearchResultDetails = ({ searchResult, fillFormWithData }) => {\n  const classes = useStyles();\n\n  const name = searchResult.address.amenity;\n  const subtitle = \"\";\n  const website = searchResult.extratags.website;\n  const latlon = `${searchResult.lat},${searchResult.lon}`;\n  // const addressLine1 = [\n  //   searchResult.address.road,\n  //   \" \",\n  //   searchResult.address.house_number,\n  // ].join(\"\");\n\n  // const addressLine2 = [\n  //   searchResult.address.postcode,\n  //   \" \",\n  //   searchResult.address.city || searchResult.address.town,\n  //   \", \",\n  //   searchResult.address.country,\n  // ].join(\"\");\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\">{name}</Typography>\n        <Link href={website}>{website}</Link>\n        {/* <Typography variant=\"body1\">\n          {addressLine1}\n          <br />\n          {addressLine2}\n        </Typography> */}\n        <br />\n        <Button\n          color=\"primary\"\n          onClick={() => fillFormWithData(name, subtitle, website, latlon)}\n        >\n          Fill the data\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SearchResultDetails;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport SearchResultDetails from \"./SearchResultDetails\";\n\nconst SearchResults = ({ searchResults, fillFormWithData }) => {\n  return (\n    <Box\n      id=\"search-results\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n    >\n      {searchResults.map((r) => (\n        <SearchResultDetails\n          key={r.place_id}\n          searchResult={r}\n          fillFormWithData={fillFormWithData}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default SearchResults;\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport SearchResults from \"./SearchResults\";\nimport { calculateBoundingBoxAroundLocation } from \"../../utils\";\nimport axios from \"axios\";\n\nconst RestaurantForm = ({ userLocation }) => {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const fetchSearchResults = async (searchQuery) => {\n    const { x1, y1, x2, y2 } = calculateBoundingBoxAroundLocation(userLocation);\n    console.log(\"Bounding box: \", x1, y1, x2, y2);\n\n    let response = await fetch(\n      `https://nominatim.openstreetmap.org/?addressdetails=1&q=${searchQuery}&format=json&limit=5&viewbox=${x1},${y1},${x2},${y2}&extratags=1&bounded=1`\n    );\n    let data = await response.json();\n    if (data.length) {\n      console.log(data);\n      setSearchResults(data);\n    } else {\n      alert(\"No search results found\");\n    }\n  };\n\n  const fillFormWithData = (name, subtitle, website, latlon) => {\n    formikAddRestaurant.setFieldValue(\"name\", name);\n    formikAddRestaurant.setFieldValue(\"subtitle\", subtitle);\n    formikAddRestaurant.setFieldValue(\"website\", website);\n    formikAddRestaurant.setFieldValue(\"latlon\", latlon);\n  };\n\n  const formikSearchForm = useFormik({\n    initialValues: {\n      search: \"\",\n    },\n    onSubmit: (values) => {\n      fetchSearchResults(JSON.stringify(values.search));\n    },\n  });\n\n  const formikAddRestaurant = useFormik({\n    initialValues: {\n      name: \"\",\n      subtitle: \"\",\n      website: \"\",\n      latlon: \"\",\n    },\n    onSubmit: async (values) => {\n      const params = {\n        name: values.name,\n        subtitle: values.subtitle,\n        website: values.website,\n        latlon: `(${values.latlon})`,\n      };\n      const res = await axios.post(\"/restaurants\", params);\n      console.log(\"res.data: \", res.data);\n    },\n  });\n\n  return (\n    <Box>\n      <Typography variant=\"h5\">Add a new restaurant</Typography>\n      <form onSubmit={formikSearchForm.handleSubmit}>\n        <label htmlFor=\"search\">Search for a restaurant to add</label>\n        <input\n          id=\"search\"\n          name=\"search\"\n          type=\"text\"\n          onChange={formikSearchForm.handleChange}\n          value={formikSearchForm.values.search}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <SearchResults\n        searchResults={searchResults}\n        fillFormWithData={fillFormWithData}\n      />\n\n      <Typography variant=\"h6\">Add manually</Typography>\n      <form onSubmit={formikAddRestaurant.handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.name}\n        />\n        <br />\n        <label htmlFor=\"subtitle\">Specifier</label>\n        <input\n          id=\"subtitle\"\n          name=\"subtitle\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.subtitle}\n        />\n        <br />\n        <label htmlFor=\"website\">Website</label>\n        <input\n          id=\"website\"\n          name=\"website\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.website}\n        />\n        <br />\n        <label htmlFor=\"latlon\">Coordinates lat, lon</label>\n        <input\n          id=\"latlon\"\n          name=\"latlon\"\n          type=\"text\"\n          onChange={formikAddRestaurant.handleChange}\n          value={formikAddRestaurant.values.latlon}\n        />\n        <br />\n        <button type=\"submit\">Add to database</button>\n      </form>\n    </Box>\n  );\n};\n\nexport default RestaurantForm;\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n\n  if (notification.type === \"spinner\") {\n    return (\n      <div>\n        {notification.message}\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  return <div>{notification.message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport RestaurantSuggestions from \"./components/showRestaurants/RestaurantSuggestions\";\nimport Header from \"./components/Header\";\nimport { Button, Container, Box } from \"@material-ui/core\";\nimport RestaurantForm from \"./components/addRestaurant/RestaurantForm\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { locateUser } from \"./utils\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [restaurants, setRestaurants] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    const initRestaurants = async () => {\n      const response = await axios.get(\"/restaurants\");\n      setRestaurants(response.data);\n    };\n\n    initRestaurants();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container\n        maxWidth=\"md\"\n        style={{ border: \"1px solid red\", padding: \"30px\" }}\n      >\n        <Router>\n          <Header />\n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n              <Button\n                id=\"locate-button\"\n                variant=\"contained\"\n                color=\"primary\"\n                disableElevation\n                type=\"button\"\n                onClick={() => locateUser(setUserLocation, setNotification)}\n                style={{ margin: \"20px\" }}\n              >\n                Show me my options\n              </Button>\n            </Link>\n            <Link to=\"/addRestaurant\" style={{ textDecoration: \"none\" }}>\n              <Button\n                id=\"add-restaurant-button\"\n                variant=\"contained\"\n                color=\"secondary\"\n                disableElevation\n                type=\"button\"\n                style={{ margin: \"20px\" }}\n                onClick={() => locateUser(setUserLocation, setNotification)}\n              >\n                Add a new restaurant\n              </Button>\n            </Link>\n          </Box>\n          <Switch>\n            <Route path=\"/addRestaurant\">\n              <RestaurantForm userLocation={userLocation} />\n            </Route>\n            <Route path=\"/\">\n              <Notification notification={notification} />\n              {userLocation && (\n                <RestaurantSuggestions\n                  restaurants={restaurants}\n                  setRestaurants={setRestaurants}\n                  userLocation={userLocation}\n                />\n              )}\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"fontsource-roboto/latin-300-normal.css\";\nimport \"fontsource-roboto/latin-400-normal.css\";\nimport \"fontsource-roboto/latin-500-normal.css\";\nimport \"fontsource-roboto/latin-700-normal.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}